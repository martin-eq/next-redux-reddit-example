// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostList It renders properly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <PostList>
    <WithStyles(ForwardRef(List))
      disablePadding={true}
    >
      <ForwardRef(List)
        classes={
          Object {
            "dense": "MuiList-dense",
            "padding": "MuiList-padding",
            "root": "MuiList-root",
            "subheader": "MuiList-subheader",
          }
        }
        disablePadding={true}
      >
        <ul
          className="MuiList-root"
        >
          <ForwardRef(Slide)
            direction="right"
            in={true}
            key="2hqlxp"
            mountOnEnter={true}
            timeout={300}
            unmountOnExit={true}
          >
            <Transition
              appear={true}
              enter={true}
              exit={true}
              in={true}
              mountOnEnter={true}
              nodeRef={
                Object {
                  "current": <div
                    style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                  >
                    <li
                      class="MuiListItem-container"
                    >
                      <div
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        role="button"
                        tabindex="0"
                      >
                        <div
                          class="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                        >
                          <span
                            class="MuiBadge-root"
                          >
                            <div
                              class="MuiAvatar-root MuiAvatar-square"
                            >
                              <img
                                alt="Man trying to return a dog's toy gets tricked into playing fetch"
                                class="MuiAvatar-img"
                                src="http://b.thumbs.redditmedia.com/9N1f7UGKM5fPZydrsgbb4_SUyyLW7A27um1VOygY3LM.jpg"
                              />
                            </div>
                            <span
                              class="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                            >
                               
                            </span>
                          </span>
                        </div>
                        <div
                          class="MuiListItemText-root MuiListItemText-multiline"
                        >
                          <h6
                            class="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                          >
                            Man trying to return a dog's toy gets tricked into playing fetch
                          </h6>
                          <div
                            class="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                          >
                            <a
                              class="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                              href="https://www.reddit.com/u/washedupwornout"
                              rel="noopener"
                              target="_blank"
                            >
                              u/
                              washedupwornout
                            </a>
                          </div>
                          <div
                            class="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                          >
                            958
                             comments
                          </div>
                        </div>
                        <span
                          class="MuiTouchRipple-root"
                        />
                      </div>
                      <div
                        class="MuiListItemSecondaryAction-root"
                      >
                        <button
                          class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                          tabindex="0"
                          title="Dismiss Post"
                          type="button"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                              />
                            </svg>
                          </span>
                          <span
                            class="MuiTouchRipple-root"
                          />
                        </button>
                      </div>
                    </li>
                    <li
                      class="MuiDivider-root"
                      role="separator"
                    />
                  </div>,
                }
              }
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={300}
              unmountOnExit={true}
            >
              <div
                style={
                  Object {
                    "visibility": undefined,
                  }
                }
              >
                <WithStyles(ForwardRef(ListItem))
                  alignItems="flex-start"
                  button={true}
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    alignItems="flex-start"
                    button={true}
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <li
                      className="MuiListItem-container"
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="div"
                          disabled={false}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                        >
                          <div
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ListItemAvatar))
                              key=".0"
                            >
                              <ForwardRef(ListItemAvatar)
                                classes={
                                  Object {
                                    "alignItemsFlexStart": "MuiListItemAvatar-alignItemsFlexStart",
                                    "root": "MuiListItemAvatar-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                                >
                                  <WithStyles(ForwardRef(Badge))
                                    badgeContent=" "
                                    color="primary"
                                  >
                                    <ForwardRef(Badge)
                                      badgeContent=" "
                                      classes={
                                        Object {
                                          "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                          "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                          "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                          "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                          "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                          "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                          "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                          "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                          "badge": "MuiBadge-badge",
                                          "colorError": "MuiBadge-colorError",
                                          "colorPrimary": "MuiBadge-colorPrimary",
                                          "colorSecondary": "MuiBadge-colorSecondary",
                                          "dot": "MuiBadge-dot",
                                          "invisible": "MuiBadge-invisible",
                                          "root": "MuiBadge-root",
                                        }
                                      }
                                      color="primary"
                                    >
                                      <span
                                        className="MuiBadge-root"
                                      >
                                        <WithStyles(ForwardRef(Avatar))
                                          alt="Man trying to return a dog's toy gets tricked into playing fetch"
                                          src="http://b.thumbs.redditmedia.com/9N1f7UGKM5fPZydrsgbb4_SUyyLW7A27um1VOygY3LM.jpg"
                                          variant="square"
                                        >
                                          <ForwardRef(Avatar)
                                            alt="Man trying to return a dog's toy gets tricked into playing fetch"
                                            classes={
                                              Object {
                                                "circle": "MuiAvatar-circle",
                                                "colorDefault": "MuiAvatar-colorDefault",
                                                "fallback": "MuiAvatar-fallback",
                                                "img": "MuiAvatar-img",
                                                "root": "MuiAvatar-root",
                                                "rounded": "MuiAvatar-rounded",
                                                "square": "MuiAvatar-square",
                                              }
                                            }
                                            src="http://b.thumbs.redditmedia.com/9N1f7UGKM5fPZydrsgbb4_SUyyLW7A27um1VOygY3LM.jpg"
                                            variant="square"
                                          >
                                            <div
                                              className="MuiAvatar-root MuiAvatar-square"
                                            >
                                              <img
                                                alt="Man trying to return a dog's toy gets tricked into playing fetch"
                                                className="MuiAvatar-img"
                                                src="http://b.thumbs.redditmedia.com/9N1f7UGKM5fPZydrsgbb4_SUyyLW7A27um1VOygY3LM.jpg"
                                              />
                                            </div>
                                          </ForwardRef(Avatar)>
                                        </WithStyles(ForwardRef(Avatar))>
                                        <span
                                          className="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                                        >
                                           
                                        </span>
                                      </span>
                                    </ForwardRef(Badge)>
                                  </WithStyles(ForwardRef(Badge))>
                                </div>
                              </ForwardRef(ListItemAvatar)>
                            </WithStyles(ForwardRef(ListItemAvatar))>
                            <WithStyles(ForwardRef(ListItemText))
                              disableTypography={true}
                              key=".1"
                              primary={
                                <WithStyles(ForwardRef(Typography))
                                  color="textPrimary"
                                  variant="h6"
                                >
                                  Man trying to return a dog's toy gets tricked into playing fetch
                                </WithStyles(ForwardRef(Typography))>
                              }
                              secondary={
                                <React.Fragment>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <WithStyles(ForwardRef(Link))
                                      href="https://www.reddit.com/u/washedupwornout"
                                      onClick={[Function]}
                                      rel="noopener"
                                      target="_blank"
                                    >
                                      u/
                                      washedupwornout
                                    </WithStyles(ForwardRef(Link))>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    958
                                     comments
                                  </WithStyles(ForwardRef(Typography))>
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(ListItemText)
                                classes={
                                  Object {
                                    "dense": "MuiListItemText-dense",
                                    "inset": "MuiListItemText-inset",
                                    "multiline": "MuiListItemText-multiline",
                                    "primary": "MuiListItemText-primary",
                                    "root": "MuiListItemText-root",
                                    "secondary": "MuiListItemText-secondary",
                                  }
                                }
                                disableTypography={true}
                                primary={
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    Man trying to return a dog's toy gets tricked into playing fetch
                                  </WithStyles(ForwardRef(Typography))>
                                }
                                secondary={
                                  <React.Fragment>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <WithStyles(ForwardRef(Link))
                                        href="https://www.reddit.com/u/washedupwornout"
                                        onClick={[Function]}
                                        rel="noopener"
                                        target="_blank"
                                      >
                                        u/
                                        washedupwornout
                                      </WithStyles(ForwardRef(Link))>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      958
                                       comments
                                    </WithStyles(ForwardRef(Typography))>
                                  </React.Fragment>
                                }
                              >
                                <div
                                  className="MuiListItemText-root MuiListItemText-multiline"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      variant="h6"
                                    >
                                      <h6
                                        className="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                                      >
                                        Man trying to return a dog's toy gets tricked into playing fetch
                                      </h6>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                                      >
                                        <WithStyles(ForwardRef(Link))
                                          href="https://www.reddit.com/u/washedupwornout"
                                          onClick={[Function]}
                                          rel="noopener"
                                          target="_blank"
                                        >
                                          <ForwardRef(Link)
                                            classes={
                                              Object {
                                                "button": "MuiLink-button",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiLink-root",
                                                "underlineAlways": "MuiLink-underlineAlways",
                                                "underlineHover": "MuiLink-underlineHover",
                                                "underlineNone": "MuiLink-underlineNone",
                                              }
                                            }
                                            href="https://www.reddit.com/u/washedupwornout"
                                            onClick={[Function]}
                                            rel="noopener"
                                            target="_blank"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              className="MuiLink-root MuiLink-underlineHover"
                                              color="primary"
                                              component="a"
                                              href="https://www.reddit.com/u/washedupwornout"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              rel="noopener"
                                              target="_blank"
                                              variant="inherit"
                                            >
                                              <ForwardRef(Typography)
                                                className="MuiLink-root MuiLink-underlineHover"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                color="primary"
                                                component="a"
                                                href="https://www.reddit.com/u/washedupwornout"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                rel="noopener"
                                                target="_blank"
                                                variant="inherit"
                                              >
                                                <a
                                                  className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                  href="https://www.reddit.com/u/washedupwornout"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  rel="noopener"
                                                  target="_blank"
                                                >
                                                  u/
                                                  washedupwornout
                                                </a>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </ForwardRef(Link)>
                                        </WithStyles(ForwardRef(Link))>
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                                      >
                                        958
                                         comments
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                              </ForwardRef(ListItemText)>
                            </WithStyles(ForwardRef(ListItemText))>
                            <WithStyles(memo)
                              center={false}
                            >
                              <ForwardRef(TouchRipple)
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(memo)>
                          </div>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                      <WithStyles(ForwardRef(ListItemSecondaryAction))
                        key=".2"
                      >
                        <ForwardRef(ListItemSecondaryAction)
                          classes={
                            Object {
                              "root": "MuiListItemSecondaryAction-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemSecondaryAction-root"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              title="Dismiss Post"
                            >
                              <ForwardRef(Tooltip)
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                title="Dismiss Post"
                              >
                                <WithStyles(ForwardRef(IconButton))
                                  aria-describedby={null}
                                  className=""
                                  color="secondary"
                                  edge="end"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Dismiss Post"
                                >
                                  <ForwardRef(IconButton)
                                    aria-describedby={null}
                                    className=""
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="secondary"
                                    edge="end"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Dismiss Post"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-describedby={null}
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      disabled={false}
                                      focusRipple={true}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchStart={[Function]}
                                      title="Dismiss Post"
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-describedby={null}
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseOver={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchStart={[Function]}
                                        title="Dismiss Post"
                                      >
                                        <button
                                          aria-describedby={null}
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseOver={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          title="Dismiss Post"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <button
                                      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      tabindex="0"
                                      title="Dismiss Post"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                  }
                                  className="MuiTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </div>
                        </ForwardRef(ListItemSecondaryAction)>
                      </WithStyles(ForwardRef(ListItemSecondaryAction))>
                    </li>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
                <WithStyles(ForwardRef(Divider))
                  component="li"
                >
                  <ForwardRef(Divider)
                    classes={
                      Object {
                        "absolute": "MuiDivider-absolute",
                        "flexItem": "MuiDivider-flexItem",
                        "inset": "MuiDivider-inset",
                        "light": "MuiDivider-light",
                        "middle": "MuiDivider-middle",
                        "root": "MuiDivider-root",
                        "vertical": "MuiDivider-vertical",
                      }
                    }
                    component="li"
                  >
                    <li
                      className="MuiDivider-root"
                      role="separator"
                    />
                  </ForwardRef(Divider)>
                </WithStyles(ForwardRef(Divider))>
              </div>
            </Transition>
          </ForwardRef(Slide)>
          <ForwardRef(Slide)
            direction="right"
            in={true}
            key="2hozly"
            mountOnEnter={true}
            timeout={300}
            unmountOnExit={true}
          >
            <Transition
              appear={true}
              enter={true}
              exit={true}
              in={true}
              mountOnEnter={true}
              nodeRef={
                Object {
                  "current": <div
                    style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                  >
                    <li
                      class="MuiListItem-container"
                    >
                      <div
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        role="button"
                        tabindex="0"
                      >
                        <div
                          class="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                        >
                          <span
                            class="MuiBadge-root"
                          >
                            <div
                              class="MuiAvatar-root MuiAvatar-square MuiAvatar-colorDefault"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root MuiAvatar-fallback"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                />
                              </svg>
                            </div>
                            <span
                              class="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                            >
                               
                            </span>
                          </span>
                        </div>
                        <div
                          class="MuiListItemText-root MuiListItemText-multiline"
                        >
                          <h6
                            class="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                          >
                            The secret to raising well behaved teens? Maximise their sleep: While paediatricians warn sleep deprivation can stack the deck against teenagers, a new study reveals youth’s irritability and laziness aren’t down to attitude problems but lack of sleep
                          </h6>
                          <div
                            class="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                          >
                            <a
                              class="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                              href="https://www.reddit.com/u/mubukugrappa"
                              rel="noopener"
                              target="_blank"
                            >
                              u/
                              mubukugrappa
                            </a>
                          </div>
                          <div
                            class="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                          >
                            3740
                             comments
                          </div>
                        </div>
                        <span
                          class="MuiTouchRipple-root"
                        />
                      </div>
                      <div
                        class="MuiListItemSecondaryAction-root"
                      >
                        <button
                          class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                          tabindex="0"
                          title="Dismiss Post"
                          type="button"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                              />
                            </svg>
                          </span>
                          <span
                            class="MuiTouchRipple-root"
                          />
                        </button>
                      </div>
                    </li>
                    <li
                      class="MuiDivider-root"
                      role="separator"
                    />
                  </div>,
                }
              }
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={300}
              unmountOnExit={true}
            >
              <div
                style={
                  Object {
                    "visibility": undefined,
                  }
                }
              >
                <WithStyles(ForwardRef(ListItem))
                  alignItems="flex-start"
                  button={true}
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    alignItems="flex-start"
                    button={true}
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <li
                      className="MuiListItem-container"
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="div"
                          disabled={false}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                        >
                          <div
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ListItemAvatar))
                              key=".0"
                            >
                              <ForwardRef(ListItemAvatar)
                                classes={
                                  Object {
                                    "alignItemsFlexStart": "MuiListItemAvatar-alignItemsFlexStart",
                                    "root": "MuiListItemAvatar-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                                >
                                  <WithStyles(ForwardRef(Badge))
                                    badgeContent=" "
                                    color="primary"
                                  >
                                    <ForwardRef(Badge)
                                      badgeContent=" "
                                      classes={
                                        Object {
                                          "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                          "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                          "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                          "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                          "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                          "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                          "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                          "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                          "badge": "MuiBadge-badge",
                                          "colorError": "MuiBadge-colorError",
                                          "colorPrimary": "MuiBadge-colorPrimary",
                                          "colorSecondary": "MuiBadge-colorSecondary",
                                          "dot": "MuiBadge-dot",
                                          "invisible": "MuiBadge-invisible",
                                          "root": "MuiBadge-root",
                                        }
                                      }
                                      color="primary"
                                    >
                                      <span
                                        className="MuiBadge-root"
                                      >
                                        <WithStyles(ForwardRef(Avatar))
                                          alt="The secret to raising well behaved teens? Maximise their sleep: While paediatricians warn sleep deprivation can stack the deck against teenagers, a new study reveals youth’s irritability and laziness aren’t down to attitude problems but lack of sleep"
                                          variant="square"
                                        >
                                          <ForwardRef(Avatar)
                                            alt="The secret to raising well behaved teens? Maximise their sleep: While paediatricians warn sleep deprivation can stack the deck against teenagers, a new study reveals youth’s irritability and laziness aren’t down to attitude problems but lack of sleep"
                                            classes={
                                              Object {
                                                "circle": "MuiAvatar-circle",
                                                "colorDefault": "MuiAvatar-colorDefault",
                                                "fallback": "MuiAvatar-fallback",
                                                "img": "MuiAvatar-img",
                                                "root": "MuiAvatar-root",
                                                "rounded": "MuiAvatar-rounded",
                                                "square": "MuiAvatar-square",
                                              }
                                            }
                                            variant="square"
                                          >
                                            <div
                                              className="MuiAvatar-root MuiAvatar-square MuiAvatar-colorDefault"
                                            >
                                              <ForwardRef
                                                className="MuiAvatar-fallback"
                                              >
                                                <WithStyles(ForwardRef(SvgIcon))
                                                  className="MuiAvatar-fallback"
                                                >
                                                  <ForwardRef(SvgIcon)
                                                    className="MuiAvatar-fallback"
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root MuiAvatar-fallback"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef>
                                            </div>
                                          </ForwardRef(Avatar)>
                                        </WithStyles(ForwardRef(Avatar))>
                                        <span
                                          className="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                                        >
                                           
                                        </span>
                                      </span>
                                    </ForwardRef(Badge)>
                                  </WithStyles(ForwardRef(Badge))>
                                </div>
                              </ForwardRef(ListItemAvatar)>
                            </WithStyles(ForwardRef(ListItemAvatar))>
                            <WithStyles(ForwardRef(ListItemText))
                              disableTypography={true}
                              key=".1"
                              primary={
                                <WithStyles(ForwardRef(Typography))
                                  color="textPrimary"
                                  variant="h6"
                                >
                                  The secret to raising well behaved teens? Maximise their sleep: While paediatricians warn sleep deprivation can stack the deck against teenagers, a new study reveals youth’s irritability and laziness aren’t down to attitude problems but lack of sleep
                                </WithStyles(ForwardRef(Typography))>
                              }
                              secondary={
                                <React.Fragment>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <WithStyles(ForwardRef(Link))
                                      href="https://www.reddit.com/u/mubukugrappa"
                                      onClick={[Function]}
                                      rel="noopener"
                                      target="_blank"
                                    >
                                      u/
                                      mubukugrappa
                                    </WithStyles(ForwardRef(Link))>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    3740
                                     comments
                                  </WithStyles(ForwardRef(Typography))>
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(ListItemText)
                                classes={
                                  Object {
                                    "dense": "MuiListItemText-dense",
                                    "inset": "MuiListItemText-inset",
                                    "multiline": "MuiListItemText-multiline",
                                    "primary": "MuiListItemText-primary",
                                    "root": "MuiListItemText-root",
                                    "secondary": "MuiListItemText-secondary",
                                  }
                                }
                                disableTypography={true}
                                primary={
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    The secret to raising well behaved teens? Maximise their sleep: While paediatricians warn sleep deprivation can stack the deck against teenagers, a new study reveals youth’s irritability and laziness aren’t down to attitude problems but lack of sleep
                                  </WithStyles(ForwardRef(Typography))>
                                }
                                secondary={
                                  <React.Fragment>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <WithStyles(ForwardRef(Link))
                                        href="https://www.reddit.com/u/mubukugrappa"
                                        onClick={[Function]}
                                        rel="noopener"
                                        target="_blank"
                                      >
                                        u/
                                        mubukugrappa
                                      </WithStyles(ForwardRef(Link))>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      3740
                                       comments
                                    </WithStyles(ForwardRef(Typography))>
                                  </React.Fragment>
                                }
                              >
                                <div
                                  className="MuiListItemText-root MuiListItemText-multiline"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      variant="h6"
                                    >
                                      <h6
                                        className="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                                      >
                                        The secret to raising well behaved teens? Maximise their sleep: While paediatricians warn sleep deprivation can stack the deck against teenagers, a new study reveals youth’s irritability and laziness aren’t down to attitude problems but lack of sleep
                                      </h6>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                                      >
                                        <WithStyles(ForwardRef(Link))
                                          href="https://www.reddit.com/u/mubukugrappa"
                                          onClick={[Function]}
                                          rel="noopener"
                                          target="_blank"
                                        >
                                          <ForwardRef(Link)
                                            classes={
                                              Object {
                                                "button": "MuiLink-button",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiLink-root",
                                                "underlineAlways": "MuiLink-underlineAlways",
                                                "underlineHover": "MuiLink-underlineHover",
                                                "underlineNone": "MuiLink-underlineNone",
                                              }
                                            }
                                            href="https://www.reddit.com/u/mubukugrappa"
                                            onClick={[Function]}
                                            rel="noopener"
                                            target="_blank"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              className="MuiLink-root MuiLink-underlineHover"
                                              color="primary"
                                              component="a"
                                              href="https://www.reddit.com/u/mubukugrappa"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              rel="noopener"
                                              target="_blank"
                                              variant="inherit"
                                            >
                                              <ForwardRef(Typography)
                                                className="MuiLink-root MuiLink-underlineHover"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                color="primary"
                                                component="a"
                                                href="https://www.reddit.com/u/mubukugrappa"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                rel="noopener"
                                                target="_blank"
                                                variant="inherit"
                                              >
                                                <a
                                                  className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                  href="https://www.reddit.com/u/mubukugrappa"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  rel="noopener"
                                                  target="_blank"
                                                >
                                                  u/
                                                  mubukugrappa
                                                </a>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </ForwardRef(Link)>
                                        </WithStyles(ForwardRef(Link))>
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                                      >
                                        3740
                                         comments
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                              </ForwardRef(ListItemText)>
                            </WithStyles(ForwardRef(ListItemText))>
                            <WithStyles(memo)
                              center={false}
                            >
                              <ForwardRef(TouchRipple)
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(memo)>
                          </div>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                      <WithStyles(ForwardRef(ListItemSecondaryAction))
                        key=".2"
                      >
                        <ForwardRef(ListItemSecondaryAction)
                          classes={
                            Object {
                              "root": "MuiListItemSecondaryAction-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemSecondaryAction-root"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              title="Dismiss Post"
                            >
                              <ForwardRef(Tooltip)
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                title="Dismiss Post"
                              >
                                <WithStyles(ForwardRef(IconButton))
                                  aria-describedby={null}
                                  className=""
                                  color="secondary"
                                  edge="end"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Dismiss Post"
                                >
                                  <ForwardRef(IconButton)
                                    aria-describedby={null}
                                    className=""
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="secondary"
                                    edge="end"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Dismiss Post"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-describedby={null}
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      disabled={false}
                                      focusRipple={true}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchStart={[Function]}
                                      title="Dismiss Post"
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-describedby={null}
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseOver={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchStart={[Function]}
                                        title="Dismiss Post"
                                      >
                                        <button
                                          aria-describedby={null}
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseOver={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          title="Dismiss Post"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <button
                                      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      tabindex="0"
                                      title="Dismiss Post"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                  }
                                  className="MuiTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </div>
                        </ForwardRef(ListItemSecondaryAction)>
                      </WithStyles(ForwardRef(ListItemSecondaryAction))>
                    </li>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
                <WithStyles(ForwardRef(Divider))
                  component="li"
                >
                  <ForwardRef(Divider)
                    classes={
                      Object {
                        "absolute": "MuiDivider-absolute",
                        "flexItem": "MuiDivider-flexItem",
                        "inset": "MuiDivider-inset",
                        "light": "MuiDivider-light",
                        "middle": "MuiDivider-middle",
                        "root": "MuiDivider-root",
                        "vertical": "MuiDivider-vertical",
                      }
                    }
                    component="li"
                  >
                    <li
                      className="MuiDivider-root"
                      role="separator"
                    />
                  </ForwardRef(Divider)>
                </WithStyles(ForwardRef(Divider))>
              </div>
            </Transition>
          </ForwardRef(Slide)>
          <ForwardRef(Slide)
            direction="right"
            in={true}
            key="2hpgol"
            mountOnEnter={true}
            timeout={300}
            unmountOnExit={true}
          >
            <Transition
              appear={true}
              enter={true}
              exit={true}
              in={true}
              mountOnEnter={true}
              nodeRef={
                Object {
                  "current": <div
                    style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                  >
                    <li
                      class="MuiListItem-container"
                    >
                      <div
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        role="button"
                        tabindex="0"
                      >
                        <div
                          class="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                        >
                          <span
                            class="MuiBadge-root"
                          >
                            <div
                              class="MuiAvatar-root MuiAvatar-square MuiAvatar-colorDefault"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root MuiAvatar-fallback"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                />
                              </svg>
                            </div>
                            <span
                              class="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                            >
                               
                            </span>
                          </span>
                        </div>
                        <div
                          class="MuiListItemText-root MuiListItemText-multiline"
                        >
                          <h6
                            class="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                          >
                            Google maps should have a "on the way" feature to find the most convenient gas station, Starbucks, or whatever along the route to your destination.
                          </h6>
                          <div
                            class="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                          >
                            <a
                              class="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                              href="https://www.reddit.com/u/joebobmcgeeman"
                              rel="noopener"
                              target="_blank"
                            >
                              u/
                              joebobmcgeeman
                            </a>
                          </div>
                          <div
                            class="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                          >
                            1312
                             comments
                          </div>
                        </div>
                        <span
                          class="MuiTouchRipple-root"
                        />
                      </div>
                      <div
                        class="MuiListItemSecondaryAction-root"
                      >
                        <button
                          class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                          tabindex="0"
                          title="Dismiss Post"
                          type="button"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                              />
                            </svg>
                          </span>
                          <span
                            class="MuiTouchRipple-root"
                          />
                        </button>
                      </div>
                    </li>
                    <li
                      class="MuiDivider-root"
                      role="separator"
                    />
                  </div>,
                }
              }
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={300}
              unmountOnExit={true}
            >
              <div
                style={
                  Object {
                    "visibility": undefined,
                  }
                }
              >
                <WithStyles(ForwardRef(ListItem))
                  alignItems="flex-start"
                  button={true}
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    alignItems="flex-start"
                    button={true}
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <li
                      className="MuiListItem-container"
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="div"
                          disabled={false}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                        >
                          <div
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ListItemAvatar))
                              key=".0"
                            >
                              <ForwardRef(ListItemAvatar)
                                classes={
                                  Object {
                                    "alignItemsFlexStart": "MuiListItemAvatar-alignItemsFlexStart",
                                    "root": "MuiListItemAvatar-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                                >
                                  <WithStyles(ForwardRef(Badge))
                                    badgeContent=" "
                                    color="primary"
                                  >
                                    <ForwardRef(Badge)
                                      badgeContent=" "
                                      classes={
                                        Object {
                                          "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                          "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                          "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                          "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                          "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                          "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                          "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                          "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                          "badge": "MuiBadge-badge",
                                          "colorError": "MuiBadge-colorError",
                                          "colorPrimary": "MuiBadge-colorPrimary",
                                          "colorSecondary": "MuiBadge-colorSecondary",
                                          "dot": "MuiBadge-dot",
                                          "invisible": "MuiBadge-invisible",
                                          "root": "MuiBadge-root",
                                        }
                                      }
                                      color="primary"
                                    >
                                      <span
                                        className="MuiBadge-root"
                                      >
                                        <WithStyles(ForwardRef(Avatar))
                                          alt="Google maps should have a \\"on the way\\" feature to find the most convenient gas station, Starbucks, or whatever along the route to your destination."
                                          variant="square"
                                        >
                                          <ForwardRef(Avatar)
                                            alt="Google maps should have a \\"on the way\\" feature to find the most convenient gas station, Starbucks, or whatever along the route to your destination."
                                            classes={
                                              Object {
                                                "circle": "MuiAvatar-circle",
                                                "colorDefault": "MuiAvatar-colorDefault",
                                                "fallback": "MuiAvatar-fallback",
                                                "img": "MuiAvatar-img",
                                                "root": "MuiAvatar-root",
                                                "rounded": "MuiAvatar-rounded",
                                                "square": "MuiAvatar-square",
                                              }
                                            }
                                            variant="square"
                                          >
                                            <div
                                              className="MuiAvatar-root MuiAvatar-square MuiAvatar-colorDefault"
                                            >
                                              <ForwardRef
                                                className="MuiAvatar-fallback"
                                              >
                                                <WithStyles(ForwardRef(SvgIcon))
                                                  className="MuiAvatar-fallback"
                                                >
                                                  <ForwardRef(SvgIcon)
                                                    className="MuiAvatar-fallback"
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root MuiAvatar-fallback"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef>
                                            </div>
                                          </ForwardRef(Avatar)>
                                        </WithStyles(ForwardRef(Avatar))>
                                        <span
                                          className="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                                        >
                                           
                                        </span>
                                      </span>
                                    </ForwardRef(Badge)>
                                  </WithStyles(ForwardRef(Badge))>
                                </div>
                              </ForwardRef(ListItemAvatar)>
                            </WithStyles(ForwardRef(ListItemAvatar))>
                            <WithStyles(ForwardRef(ListItemText))
                              disableTypography={true}
                              key=".1"
                              primary={
                                <WithStyles(ForwardRef(Typography))
                                  color="textPrimary"
                                  variant="h6"
                                >
                                  Google maps should have a "on the way" feature to find the most convenient gas station, Starbucks, or whatever along the route to your destination.
                                </WithStyles(ForwardRef(Typography))>
                              }
                              secondary={
                                <React.Fragment>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <WithStyles(ForwardRef(Link))
                                      href="https://www.reddit.com/u/joebobmcgeeman"
                                      onClick={[Function]}
                                      rel="noopener"
                                      target="_blank"
                                    >
                                      u/
                                      joebobmcgeeman
                                    </WithStyles(ForwardRef(Link))>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    1312
                                     comments
                                  </WithStyles(ForwardRef(Typography))>
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(ListItemText)
                                classes={
                                  Object {
                                    "dense": "MuiListItemText-dense",
                                    "inset": "MuiListItemText-inset",
                                    "multiline": "MuiListItemText-multiline",
                                    "primary": "MuiListItemText-primary",
                                    "root": "MuiListItemText-root",
                                    "secondary": "MuiListItemText-secondary",
                                  }
                                }
                                disableTypography={true}
                                primary={
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    Google maps should have a "on the way" feature to find the most convenient gas station, Starbucks, or whatever along the route to your destination.
                                  </WithStyles(ForwardRef(Typography))>
                                }
                                secondary={
                                  <React.Fragment>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <WithStyles(ForwardRef(Link))
                                        href="https://www.reddit.com/u/joebobmcgeeman"
                                        onClick={[Function]}
                                        rel="noopener"
                                        target="_blank"
                                      >
                                        u/
                                        joebobmcgeeman
                                      </WithStyles(ForwardRef(Link))>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      1312
                                       comments
                                    </WithStyles(ForwardRef(Typography))>
                                  </React.Fragment>
                                }
                              >
                                <div
                                  className="MuiListItemText-root MuiListItemText-multiline"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      variant="h6"
                                    >
                                      <h6
                                        className="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                                      >
                                        Google maps should have a "on the way" feature to find the most convenient gas station, Starbucks, or whatever along the route to your destination.
                                      </h6>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                                      >
                                        <WithStyles(ForwardRef(Link))
                                          href="https://www.reddit.com/u/joebobmcgeeman"
                                          onClick={[Function]}
                                          rel="noopener"
                                          target="_blank"
                                        >
                                          <ForwardRef(Link)
                                            classes={
                                              Object {
                                                "button": "MuiLink-button",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiLink-root",
                                                "underlineAlways": "MuiLink-underlineAlways",
                                                "underlineHover": "MuiLink-underlineHover",
                                                "underlineNone": "MuiLink-underlineNone",
                                              }
                                            }
                                            href="https://www.reddit.com/u/joebobmcgeeman"
                                            onClick={[Function]}
                                            rel="noopener"
                                            target="_blank"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              className="MuiLink-root MuiLink-underlineHover"
                                              color="primary"
                                              component="a"
                                              href="https://www.reddit.com/u/joebobmcgeeman"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              rel="noopener"
                                              target="_blank"
                                              variant="inherit"
                                            >
                                              <ForwardRef(Typography)
                                                className="MuiLink-root MuiLink-underlineHover"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                color="primary"
                                                component="a"
                                                href="https://www.reddit.com/u/joebobmcgeeman"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                rel="noopener"
                                                target="_blank"
                                                variant="inherit"
                                              >
                                                <a
                                                  className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                  href="https://www.reddit.com/u/joebobmcgeeman"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  rel="noopener"
                                                  target="_blank"
                                                >
                                                  u/
                                                  joebobmcgeeman
                                                </a>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </ForwardRef(Link)>
                                        </WithStyles(ForwardRef(Link))>
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                                      >
                                        1312
                                         comments
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                              </ForwardRef(ListItemText)>
                            </WithStyles(ForwardRef(ListItemText))>
                            <WithStyles(memo)
                              center={false}
                            >
                              <ForwardRef(TouchRipple)
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(memo)>
                          </div>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                      <WithStyles(ForwardRef(ListItemSecondaryAction))
                        key=".2"
                      >
                        <ForwardRef(ListItemSecondaryAction)
                          classes={
                            Object {
                              "root": "MuiListItemSecondaryAction-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemSecondaryAction-root"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              title="Dismiss Post"
                            >
                              <ForwardRef(Tooltip)
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                title="Dismiss Post"
                              >
                                <WithStyles(ForwardRef(IconButton))
                                  aria-describedby={null}
                                  className=""
                                  color="secondary"
                                  edge="end"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Dismiss Post"
                                >
                                  <ForwardRef(IconButton)
                                    aria-describedby={null}
                                    className=""
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="secondary"
                                    edge="end"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Dismiss Post"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-describedby={null}
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      disabled={false}
                                      focusRipple={true}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchStart={[Function]}
                                      title="Dismiss Post"
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-describedby={null}
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseOver={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchStart={[Function]}
                                        title="Dismiss Post"
                                      >
                                        <button
                                          aria-describedby={null}
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseOver={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          title="Dismiss Post"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <button
                                      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      tabindex="0"
                                      title="Dismiss Post"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                  }
                                  className="MuiTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </div>
                        </ForwardRef(ListItemSecondaryAction)>
                      </WithStyles(ForwardRef(ListItemSecondaryAction))>
                    </li>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
                <WithStyles(ForwardRef(Divider))
                  component="li"
                >
                  <ForwardRef(Divider)
                    classes={
                      Object {
                        "absolute": "MuiDivider-absolute",
                        "flexItem": "MuiDivider-flexItem",
                        "inset": "MuiDivider-inset",
                        "light": "MuiDivider-light",
                        "middle": "MuiDivider-middle",
                        "root": "MuiDivider-root",
                        "vertical": "MuiDivider-vertical",
                      }
                    }
                    component="li"
                  >
                    <li
                      className="MuiDivider-root"
                      role="separator"
                    />
                  </ForwardRef(Divider)>
                </WithStyles(ForwardRef(Divider))>
              </div>
            </Transition>
          </ForwardRef(Slide)>
          <ForwardRef(Slide)
            direction="right"
            in={true}
            key="2hpdz2"
            mountOnEnter={true}
            timeout={300}
            unmountOnExit={true}
          >
            <Transition
              appear={true}
              enter={true}
              exit={true}
              in={true}
              mountOnEnter={true}
              nodeRef={
                Object {
                  "current": <div
                    style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                  >
                    <li
                      class="MuiListItem-container"
                    >
                      <div
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        role="button"
                        tabindex="0"
                      >
                        <div
                          class="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                        >
                          <span
                            class="MuiBadge-root"
                          >
                            <div
                              class="MuiAvatar-root MuiAvatar-square MuiAvatar-colorDefault"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root MuiAvatar-fallback"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                />
                              </svg>
                            </div>
                            <span
                              class="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                            >
                               
                            </span>
                          </span>
                        </div>
                        <div
                          class="MuiListItemText-root MuiListItemText-multiline"
                        >
                          <h6
                            class="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                          >
                            Vatican Paedophilia Scandal: Archbishop Jozef Wesolowski Stored Over 100,000 Child Porn Videos
                          </h6>
                          <div
                            class="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                          >
                            <a
                              class="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                              href="https://www.reddit.com/u/ShellOilNigeria"
                              rel="noopener"
                              target="_blank"
                            >
                              u/
                              ShellOilNigeria
                            </a>
                          </div>
                          <div
                            class="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                          >
                            2456
                             comments
                          </div>
                        </div>
                        <span
                          class="MuiTouchRipple-root"
                        />
                      </div>
                      <div
                        class="MuiListItemSecondaryAction-root"
                      >
                        <button
                          class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                          tabindex="0"
                          title="Dismiss Post"
                          type="button"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                              />
                            </svg>
                          </span>
                          <span
                            class="MuiTouchRipple-root"
                          />
                        </button>
                      </div>
                    </li>
                    <li
                      class="MuiDivider-root"
                      role="separator"
                    />
                  </div>,
                }
              }
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={300}
              unmountOnExit={true}
            >
              <div
                style={
                  Object {
                    "visibility": undefined,
                  }
                }
              >
                <WithStyles(ForwardRef(ListItem))
                  alignItems="flex-start"
                  button={true}
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    alignItems="flex-start"
                    button={true}
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <li
                      className="MuiListItem-container"
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="div"
                          disabled={false}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                        >
                          <div
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ListItemAvatar))
                              key=".0"
                            >
                              <ForwardRef(ListItemAvatar)
                                classes={
                                  Object {
                                    "alignItemsFlexStart": "MuiListItemAvatar-alignItemsFlexStart",
                                    "root": "MuiListItemAvatar-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                                >
                                  <WithStyles(ForwardRef(Badge))
                                    badgeContent=" "
                                    color="primary"
                                  >
                                    <ForwardRef(Badge)
                                      badgeContent=" "
                                      classes={
                                        Object {
                                          "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                          "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                          "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                          "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                          "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                          "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                          "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                          "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                          "badge": "MuiBadge-badge",
                                          "colorError": "MuiBadge-colorError",
                                          "colorPrimary": "MuiBadge-colorPrimary",
                                          "colorSecondary": "MuiBadge-colorSecondary",
                                          "dot": "MuiBadge-dot",
                                          "invisible": "MuiBadge-invisible",
                                          "root": "MuiBadge-root",
                                        }
                                      }
                                      color="primary"
                                    >
                                      <span
                                        className="MuiBadge-root"
                                      >
                                        <WithStyles(ForwardRef(Avatar))
                                          alt="Vatican Paedophilia Scandal: Archbishop Jozef Wesolowski Stored Over 100,000 Child Porn Videos"
                                          variant="square"
                                        >
                                          <ForwardRef(Avatar)
                                            alt="Vatican Paedophilia Scandal: Archbishop Jozef Wesolowski Stored Over 100,000 Child Porn Videos"
                                            classes={
                                              Object {
                                                "circle": "MuiAvatar-circle",
                                                "colorDefault": "MuiAvatar-colorDefault",
                                                "fallback": "MuiAvatar-fallback",
                                                "img": "MuiAvatar-img",
                                                "root": "MuiAvatar-root",
                                                "rounded": "MuiAvatar-rounded",
                                                "square": "MuiAvatar-square",
                                              }
                                            }
                                            variant="square"
                                          >
                                            <div
                                              className="MuiAvatar-root MuiAvatar-square MuiAvatar-colorDefault"
                                            >
                                              <ForwardRef
                                                className="MuiAvatar-fallback"
                                              >
                                                <WithStyles(ForwardRef(SvgIcon))
                                                  className="MuiAvatar-fallback"
                                                >
                                                  <ForwardRef(SvgIcon)
                                                    className="MuiAvatar-fallback"
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root MuiAvatar-fallback"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef>
                                            </div>
                                          </ForwardRef(Avatar)>
                                        </WithStyles(ForwardRef(Avatar))>
                                        <span
                                          className="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                                        >
                                           
                                        </span>
                                      </span>
                                    </ForwardRef(Badge)>
                                  </WithStyles(ForwardRef(Badge))>
                                </div>
                              </ForwardRef(ListItemAvatar)>
                            </WithStyles(ForwardRef(ListItemAvatar))>
                            <WithStyles(ForwardRef(ListItemText))
                              disableTypography={true}
                              key=".1"
                              primary={
                                <WithStyles(ForwardRef(Typography))
                                  color="textPrimary"
                                  variant="h6"
                                >
                                  Vatican Paedophilia Scandal: Archbishop Jozef Wesolowski Stored Over 100,000 Child Porn Videos
                                </WithStyles(ForwardRef(Typography))>
                              }
                              secondary={
                                <React.Fragment>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <WithStyles(ForwardRef(Link))
                                      href="https://www.reddit.com/u/ShellOilNigeria"
                                      onClick={[Function]}
                                      rel="noopener"
                                      target="_blank"
                                    >
                                      u/
                                      ShellOilNigeria
                                    </WithStyles(ForwardRef(Link))>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    2456
                                     comments
                                  </WithStyles(ForwardRef(Typography))>
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(ListItemText)
                                classes={
                                  Object {
                                    "dense": "MuiListItemText-dense",
                                    "inset": "MuiListItemText-inset",
                                    "multiline": "MuiListItemText-multiline",
                                    "primary": "MuiListItemText-primary",
                                    "root": "MuiListItemText-root",
                                    "secondary": "MuiListItemText-secondary",
                                  }
                                }
                                disableTypography={true}
                                primary={
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    Vatican Paedophilia Scandal: Archbishop Jozef Wesolowski Stored Over 100,000 Child Porn Videos
                                  </WithStyles(ForwardRef(Typography))>
                                }
                                secondary={
                                  <React.Fragment>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <WithStyles(ForwardRef(Link))
                                        href="https://www.reddit.com/u/ShellOilNigeria"
                                        onClick={[Function]}
                                        rel="noopener"
                                        target="_blank"
                                      >
                                        u/
                                        ShellOilNigeria
                                      </WithStyles(ForwardRef(Link))>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      2456
                                       comments
                                    </WithStyles(ForwardRef(Typography))>
                                  </React.Fragment>
                                }
                              >
                                <div
                                  className="MuiListItemText-root MuiListItemText-multiline"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      variant="h6"
                                    >
                                      <h6
                                        className="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                                      >
                                        Vatican Paedophilia Scandal: Archbishop Jozef Wesolowski Stored Over 100,000 Child Porn Videos
                                      </h6>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                                      >
                                        <WithStyles(ForwardRef(Link))
                                          href="https://www.reddit.com/u/ShellOilNigeria"
                                          onClick={[Function]}
                                          rel="noopener"
                                          target="_blank"
                                        >
                                          <ForwardRef(Link)
                                            classes={
                                              Object {
                                                "button": "MuiLink-button",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiLink-root",
                                                "underlineAlways": "MuiLink-underlineAlways",
                                                "underlineHover": "MuiLink-underlineHover",
                                                "underlineNone": "MuiLink-underlineNone",
                                              }
                                            }
                                            href="https://www.reddit.com/u/ShellOilNigeria"
                                            onClick={[Function]}
                                            rel="noopener"
                                            target="_blank"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              className="MuiLink-root MuiLink-underlineHover"
                                              color="primary"
                                              component="a"
                                              href="https://www.reddit.com/u/ShellOilNigeria"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              rel="noopener"
                                              target="_blank"
                                              variant="inherit"
                                            >
                                              <ForwardRef(Typography)
                                                className="MuiLink-root MuiLink-underlineHover"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                color="primary"
                                                component="a"
                                                href="https://www.reddit.com/u/ShellOilNigeria"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                rel="noopener"
                                                target="_blank"
                                                variant="inherit"
                                              >
                                                <a
                                                  className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                  href="https://www.reddit.com/u/ShellOilNigeria"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  rel="noopener"
                                                  target="_blank"
                                                >
                                                  u/
                                                  ShellOilNigeria
                                                </a>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </ForwardRef(Link)>
                                        </WithStyles(ForwardRef(Link))>
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                                      >
                                        2456
                                         comments
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                              </ForwardRef(ListItemText)>
                            </WithStyles(ForwardRef(ListItemText))>
                            <WithStyles(memo)
                              center={false}
                            >
                              <ForwardRef(TouchRipple)
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(memo)>
                          </div>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                      <WithStyles(ForwardRef(ListItemSecondaryAction))
                        key=".2"
                      >
                        <ForwardRef(ListItemSecondaryAction)
                          classes={
                            Object {
                              "root": "MuiListItemSecondaryAction-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemSecondaryAction-root"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              title="Dismiss Post"
                            >
                              <ForwardRef(Tooltip)
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                title="Dismiss Post"
                              >
                                <WithStyles(ForwardRef(IconButton))
                                  aria-describedby={null}
                                  className=""
                                  color="secondary"
                                  edge="end"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Dismiss Post"
                                >
                                  <ForwardRef(IconButton)
                                    aria-describedby={null}
                                    className=""
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="secondary"
                                    edge="end"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Dismiss Post"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-describedby={null}
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      disabled={false}
                                      focusRipple={true}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchStart={[Function]}
                                      title="Dismiss Post"
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-describedby={null}
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseOver={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchStart={[Function]}
                                        title="Dismiss Post"
                                      >
                                        <button
                                          aria-describedby={null}
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseOver={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          title="Dismiss Post"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <button
                                      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      tabindex="0"
                                      title="Dismiss Post"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                  }
                                  className="MuiTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </div>
                        </ForwardRef(ListItemSecondaryAction)>
                      </WithStyles(ForwardRef(ListItemSecondaryAction))>
                    </li>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
                <WithStyles(ForwardRef(Divider))
                  component="li"
                >
                  <ForwardRef(Divider)
                    classes={
                      Object {
                        "absolute": "MuiDivider-absolute",
                        "flexItem": "MuiDivider-flexItem",
                        "inset": "MuiDivider-inset",
                        "light": "MuiDivider-light",
                        "middle": "MuiDivider-middle",
                        "root": "MuiDivider-root",
                        "vertical": "MuiDivider-vertical",
                      }
                    }
                    component="li"
                  >
                    <li
                      className="MuiDivider-root"
                      role="separator"
                    />
                  </ForwardRef(Divider)>
                </WithStyles(ForwardRef(Divider))>
              </div>
            </Transition>
          </ForwardRef(Slide)>
          <ForwardRef(Slide)
            direction="right"
            in={true}
            key="2hplea"
            mountOnEnter={true}
            timeout={300}
            unmountOnExit={true}
          >
            <Transition
              appear={true}
              enter={true}
              exit={true}
              in={true}
              mountOnEnter={true}
              nodeRef={
                Object {
                  "current": <div
                    style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                  >
                    <li
                      class="MuiListItem-container"
                    >
                      <div
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        role="button"
                        tabindex="0"
                      >
                        <div
                          class="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                        >
                          <span
                            class="MuiBadge-root"
                          >
                            <div
                              class="MuiAvatar-root MuiAvatar-square"
                            >
                              <img
                                alt="Technology is rad"
                                class="MuiAvatar-img"
                                src="http://a.thumbs.redditmedia.com/fFhSygZWb7GehQqTYS7mYapuF91Wo86KsmOMgrhxiZ8.jpg"
                              />
                            </div>
                            <span
                              class="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                            >
                               
                            </span>
                          </span>
                        </div>
                        <div
                          class="MuiListItemText-root MuiListItemText-multiline"
                        >
                          <h6
                            class="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                          >
                            Technology is rad
                          </h6>
                          <div
                            class="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                          >
                            <a
                              class="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                              href="https://www.reddit.com/u/Chakintosh"
                              rel="noopener"
                              target="_blank"
                            >
                              u/
                              Chakintosh
                            </a>
                          </div>
                          <div
                            class="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                          >
                            448
                             comments
                          </div>
                        </div>
                        <span
                          class="MuiTouchRipple-root"
                        />
                      </div>
                      <div
                        class="MuiListItemSecondaryAction-root"
                      >
                        <button
                          class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                          tabindex="0"
                          title="Dismiss Post"
                          type="button"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                              />
                            </svg>
                          </span>
                          <span
                            class="MuiTouchRipple-root"
                          />
                        </button>
                      </div>
                    </li>
                    <li
                      class="MuiDivider-root"
                      role="separator"
                    />
                  </div>,
                }
              }
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={300}
              unmountOnExit={true}
            >
              <div
                style={
                  Object {
                    "visibility": undefined,
                  }
                }
              >
                <WithStyles(ForwardRef(ListItem))
                  alignItems="flex-start"
                  button={true}
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    alignItems="flex-start"
                    button={true}
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <li
                      className="MuiListItem-container"
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="div"
                          disabled={false}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                        >
                          <div
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ListItemAvatar))
                              key=".0"
                            >
                              <ForwardRef(ListItemAvatar)
                                classes={
                                  Object {
                                    "alignItemsFlexStart": "MuiListItemAvatar-alignItemsFlexStart",
                                    "root": "MuiListItemAvatar-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                                >
                                  <WithStyles(ForwardRef(Badge))
                                    badgeContent=" "
                                    color="primary"
                                  >
                                    <ForwardRef(Badge)
                                      badgeContent=" "
                                      classes={
                                        Object {
                                          "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                          "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                          "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                          "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                          "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                          "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                          "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                          "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                          "badge": "MuiBadge-badge",
                                          "colorError": "MuiBadge-colorError",
                                          "colorPrimary": "MuiBadge-colorPrimary",
                                          "colorSecondary": "MuiBadge-colorSecondary",
                                          "dot": "MuiBadge-dot",
                                          "invisible": "MuiBadge-invisible",
                                          "root": "MuiBadge-root",
                                        }
                                      }
                                      color="primary"
                                    >
                                      <span
                                        className="MuiBadge-root"
                                      >
                                        <WithStyles(ForwardRef(Avatar))
                                          alt="Technology is rad"
                                          src="http://a.thumbs.redditmedia.com/fFhSygZWb7GehQqTYS7mYapuF91Wo86KsmOMgrhxiZ8.jpg"
                                          variant="square"
                                        >
                                          <ForwardRef(Avatar)
                                            alt="Technology is rad"
                                            classes={
                                              Object {
                                                "circle": "MuiAvatar-circle",
                                                "colorDefault": "MuiAvatar-colorDefault",
                                                "fallback": "MuiAvatar-fallback",
                                                "img": "MuiAvatar-img",
                                                "root": "MuiAvatar-root",
                                                "rounded": "MuiAvatar-rounded",
                                                "square": "MuiAvatar-square",
                                              }
                                            }
                                            src="http://a.thumbs.redditmedia.com/fFhSygZWb7GehQqTYS7mYapuF91Wo86KsmOMgrhxiZ8.jpg"
                                            variant="square"
                                          >
                                            <div
                                              className="MuiAvatar-root MuiAvatar-square"
                                            >
                                              <img
                                                alt="Technology is rad"
                                                className="MuiAvatar-img"
                                                src="http://a.thumbs.redditmedia.com/fFhSygZWb7GehQqTYS7mYapuF91Wo86KsmOMgrhxiZ8.jpg"
                                              />
                                            </div>
                                          </ForwardRef(Avatar)>
                                        </WithStyles(ForwardRef(Avatar))>
                                        <span
                                          className="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                                        >
                                           
                                        </span>
                                      </span>
                                    </ForwardRef(Badge)>
                                  </WithStyles(ForwardRef(Badge))>
                                </div>
                              </ForwardRef(ListItemAvatar)>
                            </WithStyles(ForwardRef(ListItemAvatar))>
                            <WithStyles(ForwardRef(ListItemText))
                              disableTypography={true}
                              key=".1"
                              primary={
                                <WithStyles(ForwardRef(Typography))
                                  color="textPrimary"
                                  variant="h6"
                                >
                                  Technology is rad
                                </WithStyles(ForwardRef(Typography))>
                              }
                              secondary={
                                <React.Fragment>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <WithStyles(ForwardRef(Link))
                                      href="https://www.reddit.com/u/Chakintosh"
                                      onClick={[Function]}
                                      rel="noopener"
                                      target="_blank"
                                    >
                                      u/
                                      Chakintosh
                                    </WithStyles(ForwardRef(Link))>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    448
                                     comments
                                  </WithStyles(ForwardRef(Typography))>
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(ListItemText)
                                classes={
                                  Object {
                                    "dense": "MuiListItemText-dense",
                                    "inset": "MuiListItemText-inset",
                                    "multiline": "MuiListItemText-multiline",
                                    "primary": "MuiListItemText-primary",
                                    "root": "MuiListItemText-root",
                                    "secondary": "MuiListItemText-secondary",
                                  }
                                }
                                disableTypography={true}
                                primary={
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    Technology is rad
                                  </WithStyles(ForwardRef(Typography))>
                                }
                                secondary={
                                  <React.Fragment>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <WithStyles(ForwardRef(Link))
                                        href="https://www.reddit.com/u/Chakintosh"
                                        onClick={[Function]}
                                        rel="noopener"
                                        target="_blank"
                                      >
                                        u/
                                        Chakintosh
                                      </WithStyles(ForwardRef(Link))>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      448
                                       comments
                                    </WithStyles(ForwardRef(Typography))>
                                  </React.Fragment>
                                }
                              >
                                <div
                                  className="MuiListItemText-root MuiListItemText-multiline"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      variant="h6"
                                    >
                                      <h6
                                        className="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                                      >
                                        Technology is rad
                                      </h6>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                                      >
                                        <WithStyles(ForwardRef(Link))
                                          href="https://www.reddit.com/u/Chakintosh"
                                          onClick={[Function]}
                                          rel="noopener"
                                          target="_blank"
                                        >
                                          <ForwardRef(Link)
                                            classes={
                                              Object {
                                                "button": "MuiLink-button",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiLink-root",
                                                "underlineAlways": "MuiLink-underlineAlways",
                                                "underlineHover": "MuiLink-underlineHover",
                                                "underlineNone": "MuiLink-underlineNone",
                                              }
                                            }
                                            href="https://www.reddit.com/u/Chakintosh"
                                            onClick={[Function]}
                                            rel="noopener"
                                            target="_blank"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              className="MuiLink-root MuiLink-underlineHover"
                                              color="primary"
                                              component="a"
                                              href="https://www.reddit.com/u/Chakintosh"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              rel="noopener"
                                              target="_blank"
                                              variant="inherit"
                                            >
                                              <ForwardRef(Typography)
                                                className="MuiLink-root MuiLink-underlineHover"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                color="primary"
                                                component="a"
                                                href="https://www.reddit.com/u/Chakintosh"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                rel="noopener"
                                                target="_blank"
                                                variant="inherit"
                                              >
                                                <a
                                                  className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                  href="https://www.reddit.com/u/Chakintosh"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  rel="noopener"
                                                  target="_blank"
                                                >
                                                  u/
                                                  Chakintosh
                                                </a>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </ForwardRef(Link)>
                                        </WithStyles(ForwardRef(Link))>
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                                      >
                                        448
                                         comments
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                              </ForwardRef(ListItemText)>
                            </WithStyles(ForwardRef(ListItemText))>
                            <WithStyles(memo)
                              center={false}
                            >
                              <ForwardRef(TouchRipple)
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(memo)>
                          </div>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                      <WithStyles(ForwardRef(ListItemSecondaryAction))
                        key=".2"
                      >
                        <ForwardRef(ListItemSecondaryAction)
                          classes={
                            Object {
                              "root": "MuiListItemSecondaryAction-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemSecondaryAction-root"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              title="Dismiss Post"
                            >
                              <ForwardRef(Tooltip)
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                title="Dismiss Post"
                              >
                                <WithStyles(ForwardRef(IconButton))
                                  aria-describedby={null}
                                  className=""
                                  color="secondary"
                                  edge="end"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Dismiss Post"
                                >
                                  <ForwardRef(IconButton)
                                    aria-describedby={null}
                                    className=""
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="secondary"
                                    edge="end"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Dismiss Post"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-describedby={null}
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      disabled={false}
                                      focusRipple={true}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchStart={[Function]}
                                      title="Dismiss Post"
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-describedby={null}
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseOver={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchStart={[Function]}
                                        title="Dismiss Post"
                                      >
                                        <button
                                          aria-describedby={null}
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseOver={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          title="Dismiss Post"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <button
                                      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      tabindex="0"
                                      title="Dismiss Post"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                  }
                                  className="MuiTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </div>
                        </ForwardRef(ListItemSecondaryAction)>
                      </WithStyles(ForwardRef(ListItemSecondaryAction))>
                    </li>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
                <WithStyles(ForwardRef(Divider))
                  component="li"
                >
                  <ForwardRef(Divider)
                    classes={
                      Object {
                        "absolute": "MuiDivider-absolute",
                        "flexItem": "MuiDivider-flexItem",
                        "inset": "MuiDivider-inset",
                        "light": "MuiDivider-light",
                        "middle": "MuiDivider-middle",
                        "root": "MuiDivider-root",
                        "vertical": "MuiDivider-vertical",
                      }
                    }
                    component="li"
                  >
                    <li
                      className="MuiDivider-root"
                      role="separator"
                    />
                  </ForwardRef(Divider)>
                </WithStyles(ForwardRef(Divider))>
              </div>
            </Transition>
          </ForwardRef(Slide)>
          <ForwardRef(Slide)
            direction="right"
            in={true}
            key="2hpknk"
            mountOnEnter={true}
            timeout={300}
            unmountOnExit={true}
          >
            <Transition
              appear={true}
              enter={true}
              exit={true}
              in={true}
              mountOnEnter={true}
              nodeRef={
                Object {
                  "current": <div
                    style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                  >
                    <li
                      class="MuiListItem-container"
                    >
                      <div
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        role="button"
                        tabindex="0"
                      >
                        <div
                          class="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                        >
                          <span
                            class="MuiBadge-root"
                          >
                            <div
                              class="MuiAvatar-root MuiAvatar-square"
                            >
                              <img
                                alt="My hands after 20 minutes in the bath, left one (paralysed) no wrinkles"
                                class="MuiAvatar-img"
                                src="http://a.thumbs.redditmedia.com/lBSVDpIom0X7IXFce9JDmSOczd6N2calOwf4pE8Xoy8.jpg"
                              />
                            </div>
                            <span
                              class="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                            >
                               
                            </span>
                          </span>
                        </div>
                        <div
                          class="MuiListItemText-root MuiListItemText-multiline"
                        >
                          <h6
                            class="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                          >
                            My hands after 20 minutes in the bath, left one (paralysed) no wrinkles
                          </h6>
                          <div
                            class="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                          >
                            <a
                              class="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                              href="https://www.reddit.com/u/whodigsdeepest"
                              rel="noopener"
                              target="_blank"
                            >
                              u/
                              whodigsdeepest
                            </a>
                          </div>
                          <div
                            class="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                          >
                            1072
                             comments
                          </div>
                        </div>
                        <span
                          class="MuiTouchRipple-root"
                        />
                      </div>
                      <div
                        class="MuiListItemSecondaryAction-root"
                      >
                        <button
                          class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                          tabindex="0"
                          title="Dismiss Post"
                          type="button"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                              />
                            </svg>
                          </span>
                          <span
                            class="MuiTouchRipple-root"
                          />
                        </button>
                      </div>
                    </li>
                    <li
                      class="MuiDivider-root"
                      role="separator"
                    />
                  </div>,
                }
              }
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={300}
              unmountOnExit={true}
            >
              <div
                style={
                  Object {
                    "visibility": undefined,
                  }
                }
              >
                <WithStyles(ForwardRef(ListItem))
                  alignItems="flex-start"
                  button={true}
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    alignItems="flex-start"
                    button={true}
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <li
                      className="MuiListItem-container"
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="div"
                          disabled={false}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                        >
                          <div
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ListItemAvatar))
                              key=".0"
                            >
                              <ForwardRef(ListItemAvatar)
                                classes={
                                  Object {
                                    "alignItemsFlexStart": "MuiListItemAvatar-alignItemsFlexStart",
                                    "root": "MuiListItemAvatar-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                                >
                                  <WithStyles(ForwardRef(Badge))
                                    badgeContent=" "
                                    color="primary"
                                  >
                                    <ForwardRef(Badge)
                                      badgeContent=" "
                                      classes={
                                        Object {
                                          "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                          "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                          "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                          "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                          "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                          "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                          "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                          "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                          "badge": "MuiBadge-badge",
                                          "colorError": "MuiBadge-colorError",
                                          "colorPrimary": "MuiBadge-colorPrimary",
                                          "colorSecondary": "MuiBadge-colorSecondary",
                                          "dot": "MuiBadge-dot",
                                          "invisible": "MuiBadge-invisible",
                                          "root": "MuiBadge-root",
                                        }
                                      }
                                      color="primary"
                                    >
                                      <span
                                        className="MuiBadge-root"
                                      >
                                        <WithStyles(ForwardRef(Avatar))
                                          alt="My hands after 20 minutes in the bath, left one (paralysed) no wrinkles"
                                          src="http://a.thumbs.redditmedia.com/lBSVDpIom0X7IXFce9JDmSOczd6N2calOwf4pE8Xoy8.jpg"
                                          variant="square"
                                        >
                                          <ForwardRef(Avatar)
                                            alt="My hands after 20 minutes in the bath, left one (paralysed) no wrinkles"
                                            classes={
                                              Object {
                                                "circle": "MuiAvatar-circle",
                                                "colorDefault": "MuiAvatar-colorDefault",
                                                "fallback": "MuiAvatar-fallback",
                                                "img": "MuiAvatar-img",
                                                "root": "MuiAvatar-root",
                                                "rounded": "MuiAvatar-rounded",
                                                "square": "MuiAvatar-square",
                                              }
                                            }
                                            src="http://a.thumbs.redditmedia.com/lBSVDpIom0X7IXFce9JDmSOczd6N2calOwf4pE8Xoy8.jpg"
                                            variant="square"
                                          >
                                            <div
                                              className="MuiAvatar-root MuiAvatar-square"
                                            >
                                              <img
                                                alt="My hands after 20 minutes in the bath, left one (paralysed) no wrinkles"
                                                className="MuiAvatar-img"
                                                src="http://a.thumbs.redditmedia.com/lBSVDpIom0X7IXFce9JDmSOczd6N2calOwf4pE8Xoy8.jpg"
                                              />
                                            </div>
                                          </ForwardRef(Avatar)>
                                        </WithStyles(ForwardRef(Avatar))>
                                        <span
                                          className="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                                        >
                                           
                                        </span>
                                      </span>
                                    </ForwardRef(Badge)>
                                  </WithStyles(ForwardRef(Badge))>
                                </div>
                              </ForwardRef(ListItemAvatar)>
                            </WithStyles(ForwardRef(ListItemAvatar))>
                            <WithStyles(ForwardRef(ListItemText))
                              disableTypography={true}
                              key=".1"
                              primary={
                                <WithStyles(ForwardRef(Typography))
                                  color="textPrimary"
                                  variant="h6"
                                >
                                  My hands after 20 minutes in the bath, left one (paralysed) no wrinkles
                                </WithStyles(ForwardRef(Typography))>
                              }
                              secondary={
                                <React.Fragment>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <WithStyles(ForwardRef(Link))
                                      href="https://www.reddit.com/u/whodigsdeepest"
                                      onClick={[Function]}
                                      rel="noopener"
                                      target="_blank"
                                    >
                                      u/
                                      whodigsdeepest
                                    </WithStyles(ForwardRef(Link))>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    1072
                                     comments
                                  </WithStyles(ForwardRef(Typography))>
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(ListItemText)
                                classes={
                                  Object {
                                    "dense": "MuiListItemText-dense",
                                    "inset": "MuiListItemText-inset",
                                    "multiline": "MuiListItemText-multiline",
                                    "primary": "MuiListItemText-primary",
                                    "root": "MuiListItemText-root",
                                    "secondary": "MuiListItemText-secondary",
                                  }
                                }
                                disableTypography={true}
                                primary={
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    My hands after 20 minutes in the bath, left one (paralysed) no wrinkles
                                  </WithStyles(ForwardRef(Typography))>
                                }
                                secondary={
                                  <React.Fragment>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <WithStyles(ForwardRef(Link))
                                        href="https://www.reddit.com/u/whodigsdeepest"
                                        onClick={[Function]}
                                        rel="noopener"
                                        target="_blank"
                                      >
                                        u/
                                        whodigsdeepest
                                      </WithStyles(ForwardRef(Link))>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      1072
                                       comments
                                    </WithStyles(ForwardRef(Typography))>
                                  </React.Fragment>
                                }
                              >
                                <div
                                  className="MuiListItemText-root MuiListItemText-multiline"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      variant="h6"
                                    >
                                      <h6
                                        className="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                                      >
                                        My hands after 20 minutes in the bath, left one (paralysed) no wrinkles
                                      </h6>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                                      >
                                        <WithStyles(ForwardRef(Link))
                                          href="https://www.reddit.com/u/whodigsdeepest"
                                          onClick={[Function]}
                                          rel="noopener"
                                          target="_blank"
                                        >
                                          <ForwardRef(Link)
                                            classes={
                                              Object {
                                                "button": "MuiLink-button",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiLink-root",
                                                "underlineAlways": "MuiLink-underlineAlways",
                                                "underlineHover": "MuiLink-underlineHover",
                                                "underlineNone": "MuiLink-underlineNone",
                                              }
                                            }
                                            href="https://www.reddit.com/u/whodigsdeepest"
                                            onClick={[Function]}
                                            rel="noopener"
                                            target="_blank"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              className="MuiLink-root MuiLink-underlineHover"
                                              color="primary"
                                              component="a"
                                              href="https://www.reddit.com/u/whodigsdeepest"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              rel="noopener"
                                              target="_blank"
                                              variant="inherit"
                                            >
                                              <ForwardRef(Typography)
                                                className="MuiLink-root MuiLink-underlineHover"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                color="primary"
                                                component="a"
                                                href="https://www.reddit.com/u/whodigsdeepest"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                rel="noopener"
                                                target="_blank"
                                                variant="inherit"
                                              >
                                                <a
                                                  className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                  href="https://www.reddit.com/u/whodigsdeepest"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  rel="noopener"
                                                  target="_blank"
                                                >
                                                  u/
                                                  whodigsdeepest
                                                </a>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </ForwardRef(Link)>
                                        </WithStyles(ForwardRef(Link))>
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                                      >
                                        1072
                                         comments
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                              </ForwardRef(ListItemText)>
                            </WithStyles(ForwardRef(ListItemText))>
                            <WithStyles(memo)
                              center={false}
                            >
                              <ForwardRef(TouchRipple)
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(memo)>
                          </div>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                      <WithStyles(ForwardRef(ListItemSecondaryAction))
                        key=".2"
                      >
                        <ForwardRef(ListItemSecondaryAction)
                          classes={
                            Object {
                              "root": "MuiListItemSecondaryAction-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemSecondaryAction-root"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              title="Dismiss Post"
                            >
                              <ForwardRef(Tooltip)
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                title="Dismiss Post"
                              >
                                <WithStyles(ForwardRef(IconButton))
                                  aria-describedby={null}
                                  className=""
                                  color="secondary"
                                  edge="end"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Dismiss Post"
                                >
                                  <ForwardRef(IconButton)
                                    aria-describedby={null}
                                    className=""
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="secondary"
                                    edge="end"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Dismiss Post"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-describedby={null}
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      disabled={false}
                                      focusRipple={true}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchStart={[Function]}
                                      title="Dismiss Post"
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-describedby={null}
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseOver={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchStart={[Function]}
                                        title="Dismiss Post"
                                      >
                                        <button
                                          aria-describedby={null}
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseOver={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          title="Dismiss Post"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <button
                                      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      tabindex="0"
                                      title="Dismiss Post"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                  }
                                  className="MuiTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </div>
                        </ForwardRef(ListItemSecondaryAction)>
                      </WithStyles(ForwardRef(ListItemSecondaryAction))>
                    </li>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
                <WithStyles(ForwardRef(Divider))
                  component="li"
                >
                  <ForwardRef(Divider)
                    classes={
                      Object {
                        "absolute": "MuiDivider-absolute",
                        "flexItem": "MuiDivider-flexItem",
                        "inset": "MuiDivider-inset",
                        "light": "MuiDivider-light",
                        "middle": "MuiDivider-middle",
                        "root": "MuiDivider-root",
                        "vertical": "MuiDivider-vertical",
                      }
                    }
                    component="li"
                  >
                    <li
                      className="MuiDivider-root"
                      role="separator"
                    />
                  </ForwardRef(Divider)>
                </WithStyles(ForwardRef(Divider))>
              </div>
            </Transition>
          </ForwardRef(Slide)>
          <ForwardRef(Slide)
            direction="right"
            in={true}
            key="2hr2fn"
            mountOnEnter={true}
            timeout={300}
            unmountOnExit={true}
          >
            <Transition
              appear={true}
              enter={true}
              exit={true}
              in={true}
              mountOnEnter={true}
              nodeRef={
                Object {
                  "current": <div
                    style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                  >
                    <li
                      class="MuiListItem-container"
                    >
                      <div
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        role="button"
                        tabindex="0"
                      >
                        <div
                          class="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                        >
                          <span
                            class="MuiBadge-root"
                          >
                            <div
                              class="MuiAvatar-root MuiAvatar-square"
                            >
                              <img
                                alt="Here is a video that will break your clichés about fighting in armour by the end of the fifteenth century. From the Cluny Museum of France (x-post from r/MedievalHistory)"
                                class="MuiAvatar-img"
                                src="http://b.thumbs.redditmedia.com/hZJraPHzE0tCACW6QvPEF5w0K5niZGcqK3ENthnBvsQ.jpg"
                              />
                            </div>
                            <span
                              class="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                            >
                               
                            </span>
                          </span>
                        </div>
                        <div
                          class="MuiListItemText-root MuiListItemText-multiline"
                        >
                          <h6
                            class="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                          >
                            Here is a video that will break your clichés about fighting in armour by the end of the fifteenth century. From the Cluny Museum of France (x-post from r/MedievalHistory)
                          </h6>
                          <div
                            class="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                          >
                            <a
                              class="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                              href="https://www.reddit.com/u/iKentin"
                              rel="noopener"
                              target="_blank"
                            >
                              u/
                              iKentin
                            </a>
                          </div>
                          <div
                            class="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                          >
                            1883
                             comments
                          </div>
                        </div>
                        <span
                          class="MuiTouchRipple-root"
                        />
                      </div>
                      <div
                        class="MuiListItemSecondaryAction-root"
                      >
                        <button
                          class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                          tabindex="0"
                          title="Dismiss Post"
                          type="button"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                              />
                            </svg>
                          </span>
                          <span
                            class="MuiTouchRipple-root"
                          />
                        </button>
                      </div>
                    </li>
                    <li
                      class="MuiDivider-root"
                      role="separator"
                    />
                  </div>,
                }
              }
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={300}
              unmountOnExit={true}
            >
              <div
                style={
                  Object {
                    "visibility": undefined,
                  }
                }
              >
                <WithStyles(ForwardRef(ListItem))
                  alignItems="flex-start"
                  button={true}
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    alignItems="flex-start"
                    button={true}
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <li
                      className="MuiListItem-container"
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="div"
                          disabled={false}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                        >
                          <div
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ListItemAvatar))
                              key=".0"
                            >
                              <ForwardRef(ListItemAvatar)
                                classes={
                                  Object {
                                    "alignItemsFlexStart": "MuiListItemAvatar-alignItemsFlexStart",
                                    "root": "MuiListItemAvatar-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                                >
                                  <WithStyles(ForwardRef(Badge))
                                    badgeContent=" "
                                    color="primary"
                                  >
                                    <ForwardRef(Badge)
                                      badgeContent=" "
                                      classes={
                                        Object {
                                          "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                          "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                          "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                          "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                          "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                          "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                          "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                          "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                          "badge": "MuiBadge-badge",
                                          "colorError": "MuiBadge-colorError",
                                          "colorPrimary": "MuiBadge-colorPrimary",
                                          "colorSecondary": "MuiBadge-colorSecondary",
                                          "dot": "MuiBadge-dot",
                                          "invisible": "MuiBadge-invisible",
                                          "root": "MuiBadge-root",
                                        }
                                      }
                                      color="primary"
                                    >
                                      <span
                                        className="MuiBadge-root"
                                      >
                                        <WithStyles(ForwardRef(Avatar))
                                          alt="Here is a video that will break your clichés about fighting in armour by the end of the fifteenth century. From the Cluny Museum of France (x-post from r/MedievalHistory)"
                                          src="http://b.thumbs.redditmedia.com/hZJraPHzE0tCACW6QvPEF5w0K5niZGcqK3ENthnBvsQ.jpg"
                                          variant="square"
                                        >
                                          <ForwardRef(Avatar)
                                            alt="Here is a video that will break your clichés about fighting in armour by the end of the fifteenth century. From the Cluny Museum of France (x-post from r/MedievalHistory)"
                                            classes={
                                              Object {
                                                "circle": "MuiAvatar-circle",
                                                "colorDefault": "MuiAvatar-colorDefault",
                                                "fallback": "MuiAvatar-fallback",
                                                "img": "MuiAvatar-img",
                                                "root": "MuiAvatar-root",
                                                "rounded": "MuiAvatar-rounded",
                                                "square": "MuiAvatar-square",
                                              }
                                            }
                                            src="http://b.thumbs.redditmedia.com/hZJraPHzE0tCACW6QvPEF5w0K5niZGcqK3ENthnBvsQ.jpg"
                                            variant="square"
                                          >
                                            <div
                                              className="MuiAvatar-root MuiAvatar-square"
                                            >
                                              <img
                                                alt="Here is a video that will break your clichés about fighting in armour by the end of the fifteenth century. From the Cluny Museum of France (x-post from r/MedievalHistory)"
                                                className="MuiAvatar-img"
                                                src="http://b.thumbs.redditmedia.com/hZJraPHzE0tCACW6QvPEF5w0K5niZGcqK3ENthnBvsQ.jpg"
                                              />
                                            </div>
                                          </ForwardRef(Avatar)>
                                        </WithStyles(ForwardRef(Avatar))>
                                        <span
                                          className="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                                        >
                                           
                                        </span>
                                      </span>
                                    </ForwardRef(Badge)>
                                  </WithStyles(ForwardRef(Badge))>
                                </div>
                              </ForwardRef(ListItemAvatar)>
                            </WithStyles(ForwardRef(ListItemAvatar))>
                            <WithStyles(ForwardRef(ListItemText))
                              disableTypography={true}
                              key=".1"
                              primary={
                                <WithStyles(ForwardRef(Typography))
                                  color="textPrimary"
                                  variant="h6"
                                >
                                  Here is a video that will break your clichés about fighting in armour by the end of the fifteenth century. From the Cluny Museum of France (x-post from r/MedievalHistory)
                                </WithStyles(ForwardRef(Typography))>
                              }
                              secondary={
                                <React.Fragment>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <WithStyles(ForwardRef(Link))
                                      href="https://www.reddit.com/u/iKentin"
                                      onClick={[Function]}
                                      rel="noopener"
                                      target="_blank"
                                    >
                                      u/
                                      iKentin
                                    </WithStyles(ForwardRef(Link))>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    1883
                                     comments
                                  </WithStyles(ForwardRef(Typography))>
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(ListItemText)
                                classes={
                                  Object {
                                    "dense": "MuiListItemText-dense",
                                    "inset": "MuiListItemText-inset",
                                    "multiline": "MuiListItemText-multiline",
                                    "primary": "MuiListItemText-primary",
                                    "root": "MuiListItemText-root",
                                    "secondary": "MuiListItemText-secondary",
                                  }
                                }
                                disableTypography={true}
                                primary={
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    Here is a video that will break your clichés about fighting in armour by the end of the fifteenth century. From the Cluny Museum of France (x-post from r/MedievalHistory)
                                  </WithStyles(ForwardRef(Typography))>
                                }
                                secondary={
                                  <React.Fragment>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <WithStyles(ForwardRef(Link))
                                        href="https://www.reddit.com/u/iKentin"
                                        onClick={[Function]}
                                        rel="noopener"
                                        target="_blank"
                                      >
                                        u/
                                        iKentin
                                      </WithStyles(ForwardRef(Link))>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      1883
                                       comments
                                    </WithStyles(ForwardRef(Typography))>
                                  </React.Fragment>
                                }
                              >
                                <div
                                  className="MuiListItemText-root MuiListItemText-multiline"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      variant="h6"
                                    >
                                      <h6
                                        className="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                                      >
                                        Here is a video that will break your clichés about fighting in armour by the end of the fifteenth century. From the Cluny Museum of France (x-post from r/MedievalHistory)
                                      </h6>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                                      >
                                        <WithStyles(ForwardRef(Link))
                                          href="https://www.reddit.com/u/iKentin"
                                          onClick={[Function]}
                                          rel="noopener"
                                          target="_blank"
                                        >
                                          <ForwardRef(Link)
                                            classes={
                                              Object {
                                                "button": "MuiLink-button",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiLink-root",
                                                "underlineAlways": "MuiLink-underlineAlways",
                                                "underlineHover": "MuiLink-underlineHover",
                                                "underlineNone": "MuiLink-underlineNone",
                                              }
                                            }
                                            href="https://www.reddit.com/u/iKentin"
                                            onClick={[Function]}
                                            rel="noopener"
                                            target="_blank"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              className="MuiLink-root MuiLink-underlineHover"
                                              color="primary"
                                              component="a"
                                              href="https://www.reddit.com/u/iKentin"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              rel="noopener"
                                              target="_blank"
                                              variant="inherit"
                                            >
                                              <ForwardRef(Typography)
                                                className="MuiLink-root MuiLink-underlineHover"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                color="primary"
                                                component="a"
                                                href="https://www.reddit.com/u/iKentin"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                rel="noopener"
                                                target="_blank"
                                                variant="inherit"
                                              >
                                                <a
                                                  className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                  href="https://www.reddit.com/u/iKentin"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  rel="noopener"
                                                  target="_blank"
                                                >
                                                  u/
                                                  iKentin
                                                </a>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </ForwardRef(Link)>
                                        </WithStyles(ForwardRef(Link))>
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                                      >
                                        1883
                                         comments
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                              </ForwardRef(ListItemText)>
                            </WithStyles(ForwardRef(ListItemText))>
                            <WithStyles(memo)
                              center={false}
                            >
                              <ForwardRef(TouchRipple)
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(memo)>
                          </div>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                      <WithStyles(ForwardRef(ListItemSecondaryAction))
                        key=".2"
                      >
                        <ForwardRef(ListItemSecondaryAction)
                          classes={
                            Object {
                              "root": "MuiListItemSecondaryAction-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemSecondaryAction-root"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              title="Dismiss Post"
                            >
                              <ForwardRef(Tooltip)
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                title="Dismiss Post"
                              >
                                <WithStyles(ForwardRef(IconButton))
                                  aria-describedby={null}
                                  className=""
                                  color="secondary"
                                  edge="end"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Dismiss Post"
                                >
                                  <ForwardRef(IconButton)
                                    aria-describedby={null}
                                    className=""
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="secondary"
                                    edge="end"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Dismiss Post"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-describedby={null}
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      disabled={false}
                                      focusRipple={true}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchStart={[Function]}
                                      title="Dismiss Post"
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-describedby={null}
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseOver={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchStart={[Function]}
                                        title="Dismiss Post"
                                      >
                                        <button
                                          aria-describedby={null}
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseOver={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          title="Dismiss Post"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <button
                                      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      tabindex="0"
                                      title="Dismiss Post"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                  }
                                  className="MuiTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </div>
                        </ForwardRef(ListItemSecondaryAction)>
                      </WithStyles(ForwardRef(ListItemSecondaryAction))>
                    </li>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
                <WithStyles(ForwardRef(Divider))
                  component="li"
                >
                  <ForwardRef(Divider)
                    classes={
                      Object {
                        "absolute": "MuiDivider-absolute",
                        "flexItem": "MuiDivider-flexItem",
                        "inset": "MuiDivider-inset",
                        "light": "MuiDivider-light",
                        "middle": "MuiDivider-middle",
                        "root": "MuiDivider-root",
                        "vertical": "MuiDivider-vertical",
                      }
                    }
                    component="li"
                  >
                    <li
                      className="MuiDivider-root"
                      role="separator"
                    />
                  </ForwardRef(Divider)>
                </WithStyles(ForwardRef(Divider))>
              </div>
            </Transition>
          </ForwardRef(Slide)>
          <ForwardRef(Slide)
            direction="right"
            in={true}
            key="2hr4im"
            mountOnEnter={true}
            timeout={300}
            unmountOnExit={true}
          >
            <Transition
              appear={true}
              enter={true}
              exit={true}
              in={true}
              mountOnEnter={true}
              nodeRef={
                Object {
                  "current": <div
                    style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                  >
                    <li
                      class="MuiListItem-container"
                    >
                      <div
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        role="button"
                        tabindex="0"
                      >
                        <div
                          class="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                        >
                          <span
                            class="MuiBadge-root"
                          >
                            <div
                              class="MuiAvatar-root MuiAvatar-square"
                            >
                              <img
                                alt="Someone made 50 cent's tweet into a poster"
                                class="MuiAvatar-img"
                                src="http://b.thumbs.redditmedia.com/S-frL7IE-o_IwIyGEZfYPDc-3XqPU5oBAEZh5fIriVQ.jpg"
                              />
                            </div>
                            <span
                              class="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                            >
                               
                            </span>
                          </span>
                        </div>
                        <div
                          class="MuiListItemText-root MuiListItemText-multiline"
                        >
                          <h6
                            class="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                          >
                            Someone made 50 cent's tweet into a poster
                          </h6>
                          <div
                            class="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                          >
                            <a
                              class="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                              href="https://www.reddit.com/u/KillerKenyan"
                              rel="noopener"
                              target="_blank"
                            >
                              u/
                              KillerKenyan
                            </a>
                          </div>
                          <div
                            class="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                          >
                            900
                             comments
                          </div>
                        </div>
                        <span
                          class="MuiTouchRipple-root"
                        />
                      </div>
                      <div
                        class="MuiListItemSecondaryAction-root"
                      >
                        <button
                          class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                          tabindex="0"
                          title="Dismiss Post"
                          type="button"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                              />
                            </svg>
                          </span>
                          <span
                            class="MuiTouchRipple-root"
                          />
                        </button>
                      </div>
                    </li>
                    <li
                      class="MuiDivider-root"
                      role="separator"
                    />
                  </div>,
                }
              }
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={300}
              unmountOnExit={true}
            >
              <div
                style={
                  Object {
                    "visibility": undefined,
                  }
                }
              >
                <WithStyles(ForwardRef(ListItem))
                  alignItems="flex-start"
                  button={true}
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    alignItems="flex-start"
                    button={true}
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <li
                      className="MuiListItem-container"
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="div"
                          disabled={false}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                        >
                          <div
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ListItemAvatar))
                              key=".0"
                            >
                              <ForwardRef(ListItemAvatar)
                                classes={
                                  Object {
                                    "alignItemsFlexStart": "MuiListItemAvatar-alignItemsFlexStart",
                                    "root": "MuiListItemAvatar-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                                >
                                  <WithStyles(ForwardRef(Badge))
                                    badgeContent=" "
                                    color="primary"
                                  >
                                    <ForwardRef(Badge)
                                      badgeContent=" "
                                      classes={
                                        Object {
                                          "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                          "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                          "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                          "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                          "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                          "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                          "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                          "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                          "badge": "MuiBadge-badge",
                                          "colorError": "MuiBadge-colorError",
                                          "colorPrimary": "MuiBadge-colorPrimary",
                                          "colorSecondary": "MuiBadge-colorSecondary",
                                          "dot": "MuiBadge-dot",
                                          "invisible": "MuiBadge-invisible",
                                          "root": "MuiBadge-root",
                                        }
                                      }
                                      color="primary"
                                    >
                                      <span
                                        className="MuiBadge-root"
                                      >
                                        <WithStyles(ForwardRef(Avatar))
                                          alt="Someone made 50 cent's tweet into a poster"
                                          src="http://b.thumbs.redditmedia.com/S-frL7IE-o_IwIyGEZfYPDc-3XqPU5oBAEZh5fIriVQ.jpg"
                                          variant="square"
                                        >
                                          <ForwardRef(Avatar)
                                            alt="Someone made 50 cent's tweet into a poster"
                                            classes={
                                              Object {
                                                "circle": "MuiAvatar-circle",
                                                "colorDefault": "MuiAvatar-colorDefault",
                                                "fallback": "MuiAvatar-fallback",
                                                "img": "MuiAvatar-img",
                                                "root": "MuiAvatar-root",
                                                "rounded": "MuiAvatar-rounded",
                                                "square": "MuiAvatar-square",
                                              }
                                            }
                                            src="http://b.thumbs.redditmedia.com/S-frL7IE-o_IwIyGEZfYPDc-3XqPU5oBAEZh5fIriVQ.jpg"
                                            variant="square"
                                          >
                                            <div
                                              className="MuiAvatar-root MuiAvatar-square"
                                            >
                                              <img
                                                alt="Someone made 50 cent's tweet into a poster"
                                                className="MuiAvatar-img"
                                                src="http://b.thumbs.redditmedia.com/S-frL7IE-o_IwIyGEZfYPDc-3XqPU5oBAEZh5fIriVQ.jpg"
                                              />
                                            </div>
                                          </ForwardRef(Avatar)>
                                        </WithStyles(ForwardRef(Avatar))>
                                        <span
                                          className="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                                        >
                                           
                                        </span>
                                      </span>
                                    </ForwardRef(Badge)>
                                  </WithStyles(ForwardRef(Badge))>
                                </div>
                              </ForwardRef(ListItemAvatar)>
                            </WithStyles(ForwardRef(ListItemAvatar))>
                            <WithStyles(ForwardRef(ListItemText))
                              disableTypography={true}
                              key=".1"
                              primary={
                                <WithStyles(ForwardRef(Typography))
                                  color="textPrimary"
                                  variant="h6"
                                >
                                  Someone made 50 cent's tweet into a poster
                                </WithStyles(ForwardRef(Typography))>
                              }
                              secondary={
                                <React.Fragment>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <WithStyles(ForwardRef(Link))
                                      href="https://www.reddit.com/u/KillerKenyan"
                                      onClick={[Function]}
                                      rel="noopener"
                                      target="_blank"
                                    >
                                      u/
                                      KillerKenyan
                                    </WithStyles(ForwardRef(Link))>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    900
                                     comments
                                  </WithStyles(ForwardRef(Typography))>
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(ListItemText)
                                classes={
                                  Object {
                                    "dense": "MuiListItemText-dense",
                                    "inset": "MuiListItemText-inset",
                                    "multiline": "MuiListItemText-multiline",
                                    "primary": "MuiListItemText-primary",
                                    "root": "MuiListItemText-root",
                                    "secondary": "MuiListItemText-secondary",
                                  }
                                }
                                disableTypography={true}
                                primary={
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    Someone made 50 cent's tweet into a poster
                                  </WithStyles(ForwardRef(Typography))>
                                }
                                secondary={
                                  <React.Fragment>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <WithStyles(ForwardRef(Link))
                                        href="https://www.reddit.com/u/KillerKenyan"
                                        onClick={[Function]}
                                        rel="noopener"
                                        target="_blank"
                                      >
                                        u/
                                        KillerKenyan
                                      </WithStyles(ForwardRef(Link))>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      900
                                       comments
                                    </WithStyles(ForwardRef(Typography))>
                                  </React.Fragment>
                                }
                              >
                                <div
                                  className="MuiListItemText-root MuiListItemText-multiline"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      variant="h6"
                                    >
                                      <h6
                                        className="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                                      >
                                        Someone made 50 cent's tweet into a poster
                                      </h6>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                                      >
                                        <WithStyles(ForwardRef(Link))
                                          href="https://www.reddit.com/u/KillerKenyan"
                                          onClick={[Function]}
                                          rel="noopener"
                                          target="_blank"
                                        >
                                          <ForwardRef(Link)
                                            classes={
                                              Object {
                                                "button": "MuiLink-button",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiLink-root",
                                                "underlineAlways": "MuiLink-underlineAlways",
                                                "underlineHover": "MuiLink-underlineHover",
                                                "underlineNone": "MuiLink-underlineNone",
                                              }
                                            }
                                            href="https://www.reddit.com/u/KillerKenyan"
                                            onClick={[Function]}
                                            rel="noopener"
                                            target="_blank"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              className="MuiLink-root MuiLink-underlineHover"
                                              color="primary"
                                              component="a"
                                              href="https://www.reddit.com/u/KillerKenyan"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              rel="noopener"
                                              target="_blank"
                                              variant="inherit"
                                            >
                                              <ForwardRef(Typography)
                                                className="MuiLink-root MuiLink-underlineHover"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                color="primary"
                                                component="a"
                                                href="https://www.reddit.com/u/KillerKenyan"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                rel="noopener"
                                                target="_blank"
                                                variant="inherit"
                                              >
                                                <a
                                                  className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                  href="https://www.reddit.com/u/KillerKenyan"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  rel="noopener"
                                                  target="_blank"
                                                >
                                                  u/
                                                  KillerKenyan
                                                </a>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </ForwardRef(Link)>
                                        </WithStyles(ForwardRef(Link))>
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                                      >
                                        900
                                         comments
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                              </ForwardRef(ListItemText)>
                            </WithStyles(ForwardRef(ListItemText))>
                            <WithStyles(memo)
                              center={false}
                            >
                              <ForwardRef(TouchRipple)
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(memo)>
                          </div>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                      <WithStyles(ForwardRef(ListItemSecondaryAction))
                        key=".2"
                      >
                        <ForwardRef(ListItemSecondaryAction)
                          classes={
                            Object {
                              "root": "MuiListItemSecondaryAction-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemSecondaryAction-root"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              title="Dismiss Post"
                            >
                              <ForwardRef(Tooltip)
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                title="Dismiss Post"
                              >
                                <WithStyles(ForwardRef(IconButton))
                                  aria-describedby={null}
                                  className=""
                                  color="secondary"
                                  edge="end"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Dismiss Post"
                                >
                                  <ForwardRef(IconButton)
                                    aria-describedby={null}
                                    className=""
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="secondary"
                                    edge="end"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Dismiss Post"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-describedby={null}
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      disabled={false}
                                      focusRipple={true}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchStart={[Function]}
                                      title="Dismiss Post"
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-describedby={null}
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseOver={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchStart={[Function]}
                                        title="Dismiss Post"
                                      >
                                        <button
                                          aria-describedby={null}
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseOver={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          title="Dismiss Post"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <button
                                      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      tabindex="0"
                                      title="Dismiss Post"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                  }
                                  className="MuiTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </div>
                        </ForwardRef(ListItemSecondaryAction)>
                      </WithStyles(ForwardRef(ListItemSecondaryAction))>
                    </li>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
                <WithStyles(ForwardRef(Divider))
                  component="li"
                >
                  <ForwardRef(Divider)
                    classes={
                      Object {
                        "absolute": "MuiDivider-absolute",
                        "flexItem": "MuiDivider-flexItem",
                        "inset": "MuiDivider-inset",
                        "light": "MuiDivider-light",
                        "middle": "MuiDivider-middle",
                        "root": "MuiDivider-root",
                        "vertical": "MuiDivider-vertical",
                      }
                    }
                    component="li"
                  >
                    <li
                      className="MuiDivider-root"
                      role="separator"
                    />
                  </ForwardRef(Divider)>
                </WithStyles(ForwardRef(Divider))>
              </div>
            </Transition>
          </ForwardRef(Slide)>
          <ForwardRef(Slide)
            direction="right"
            in={true}
            key="2hq7tk"
            mountOnEnter={true}
            timeout={300}
            unmountOnExit={true}
          >
            <Transition
              appear={true}
              enter={true}
              exit={true}
              in={true}
              mountOnEnter={true}
              nodeRef={
                Object {
                  "current": <div
                    style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                  >
                    <li
                      class="MuiListItem-container"
                    >
                      <div
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        role="button"
                        tabindex="0"
                      >
                        <div
                          class="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                        >
                          <span
                            class="MuiBadge-root"
                          >
                            <div
                              class="MuiAvatar-root MuiAvatar-square"
                            >
                              <img
                                alt="My natural built housing in the PNW, thought I'd share!"
                                class="MuiAvatar-img"
                                src="http://a.thumbs.redditmedia.com/oEZ_OhyWfdbs9W7CrlnIimhvBtzFovBycLttp9QSrf4.jpg"
                              />
                            </div>
                            <span
                              class="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                            >
                               
                            </span>
                          </span>
                        </div>
                        <div
                          class="MuiListItemText-root MuiListItemText-multiline"
                        >
                          <h6
                            class="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                          >
                            My natural built housing in the PNW, thought I'd share!
                          </h6>
                          <div
                            class="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                          >
                            <a
                              class="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                              href="https://www.reddit.com/u/youngwill44"
                              rel="noopener"
                              target="_blank"
                            >
                              u/
                              youngwill44
                            </a>
                          </div>
                          <div
                            class="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                          >
                            1221
                             comments
                          </div>
                        </div>
                        <span
                          class="MuiTouchRipple-root"
                        />
                      </div>
                      <div
                        class="MuiListItemSecondaryAction-root"
                      >
                        <button
                          class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                          tabindex="0"
                          title="Dismiss Post"
                          type="button"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                              />
                            </svg>
                          </span>
                          <span
                            class="MuiTouchRipple-root"
                          />
                        </button>
                      </div>
                    </li>
                    <li
                      class="MuiDivider-root"
                      role="separator"
                    />
                  </div>,
                }
              }
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={300}
              unmountOnExit={true}
            >
              <div
                style={
                  Object {
                    "visibility": undefined,
                  }
                }
              >
                <WithStyles(ForwardRef(ListItem))
                  alignItems="flex-start"
                  button={true}
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    alignItems="flex-start"
                    button={true}
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <li
                      className="MuiListItem-container"
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="div"
                          disabled={false}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                        >
                          <div
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ListItemAvatar))
                              key=".0"
                            >
                              <ForwardRef(ListItemAvatar)
                                classes={
                                  Object {
                                    "alignItemsFlexStart": "MuiListItemAvatar-alignItemsFlexStart",
                                    "root": "MuiListItemAvatar-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                                >
                                  <WithStyles(ForwardRef(Badge))
                                    badgeContent=" "
                                    color="primary"
                                  >
                                    <ForwardRef(Badge)
                                      badgeContent=" "
                                      classes={
                                        Object {
                                          "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                          "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                          "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                          "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                          "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                          "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                          "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                          "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                          "badge": "MuiBadge-badge",
                                          "colorError": "MuiBadge-colorError",
                                          "colorPrimary": "MuiBadge-colorPrimary",
                                          "colorSecondary": "MuiBadge-colorSecondary",
                                          "dot": "MuiBadge-dot",
                                          "invisible": "MuiBadge-invisible",
                                          "root": "MuiBadge-root",
                                        }
                                      }
                                      color="primary"
                                    >
                                      <span
                                        className="MuiBadge-root"
                                      >
                                        <WithStyles(ForwardRef(Avatar))
                                          alt="My natural built housing in the PNW, thought I'd share!"
                                          src="http://a.thumbs.redditmedia.com/oEZ_OhyWfdbs9W7CrlnIimhvBtzFovBycLttp9QSrf4.jpg"
                                          variant="square"
                                        >
                                          <ForwardRef(Avatar)
                                            alt="My natural built housing in the PNW, thought I'd share!"
                                            classes={
                                              Object {
                                                "circle": "MuiAvatar-circle",
                                                "colorDefault": "MuiAvatar-colorDefault",
                                                "fallback": "MuiAvatar-fallback",
                                                "img": "MuiAvatar-img",
                                                "root": "MuiAvatar-root",
                                                "rounded": "MuiAvatar-rounded",
                                                "square": "MuiAvatar-square",
                                              }
                                            }
                                            src="http://a.thumbs.redditmedia.com/oEZ_OhyWfdbs9W7CrlnIimhvBtzFovBycLttp9QSrf4.jpg"
                                            variant="square"
                                          >
                                            <div
                                              className="MuiAvatar-root MuiAvatar-square"
                                            >
                                              <img
                                                alt="My natural built housing in the PNW, thought I'd share!"
                                                className="MuiAvatar-img"
                                                src="http://a.thumbs.redditmedia.com/oEZ_OhyWfdbs9W7CrlnIimhvBtzFovBycLttp9QSrf4.jpg"
                                              />
                                            </div>
                                          </ForwardRef(Avatar)>
                                        </WithStyles(ForwardRef(Avatar))>
                                        <span
                                          className="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                                        >
                                           
                                        </span>
                                      </span>
                                    </ForwardRef(Badge)>
                                  </WithStyles(ForwardRef(Badge))>
                                </div>
                              </ForwardRef(ListItemAvatar)>
                            </WithStyles(ForwardRef(ListItemAvatar))>
                            <WithStyles(ForwardRef(ListItemText))
                              disableTypography={true}
                              key=".1"
                              primary={
                                <WithStyles(ForwardRef(Typography))
                                  color="textPrimary"
                                  variant="h6"
                                >
                                  My natural built housing in the PNW, thought I'd share!
                                </WithStyles(ForwardRef(Typography))>
                              }
                              secondary={
                                <React.Fragment>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <WithStyles(ForwardRef(Link))
                                      href="https://www.reddit.com/u/youngwill44"
                                      onClick={[Function]}
                                      rel="noopener"
                                      target="_blank"
                                    >
                                      u/
                                      youngwill44
                                    </WithStyles(ForwardRef(Link))>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    1221
                                     comments
                                  </WithStyles(ForwardRef(Typography))>
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(ListItemText)
                                classes={
                                  Object {
                                    "dense": "MuiListItemText-dense",
                                    "inset": "MuiListItemText-inset",
                                    "multiline": "MuiListItemText-multiline",
                                    "primary": "MuiListItemText-primary",
                                    "root": "MuiListItemText-root",
                                    "secondary": "MuiListItemText-secondary",
                                  }
                                }
                                disableTypography={true}
                                primary={
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    My natural built housing in the PNW, thought I'd share!
                                  </WithStyles(ForwardRef(Typography))>
                                }
                                secondary={
                                  <React.Fragment>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <WithStyles(ForwardRef(Link))
                                        href="https://www.reddit.com/u/youngwill44"
                                        onClick={[Function]}
                                        rel="noopener"
                                        target="_blank"
                                      >
                                        u/
                                        youngwill44
                                      </WithStyles(ForwardRef(Link))>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      1221
                                       comments
                                    </WithStyles(ForwardRef(Typography))>
                                  </React.Fragment>
                                }
                              >
                                <div
                                  className="MuiListItemText-root MuiListItemText-multiline"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      variant="h6"
                                    >
                                      <h6
                                        className="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                                      >
                                        My natural built housing in the PNW, thought I'd share!
                                      </h6>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                                      >
                                        <WithStyles(ForwardRef(Link))
                                          href="https://www.reddit.com/u/youngwill44"
                                          onClick={[Function]}
                                          rel="noopener"
                                          target="_blank"
                                        >
                                          <ForwardRef(Link)
                                            classes={
                                              Object {
                                                "button": "MuiLink-button",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiLink-root",
                                                "underlineAlways": "MuiLink-underlineAlways",
                                                "underlineHover": "MuiLink-underlineHover",
                                                "underlineNone": "MuiLink-underlineNone",
                                              }
                                            }
                                            href="https://www.reddit.com/u/youngwill44"
                                            onClick={[Function]}
                                            rel="noopener"
                                            target="_blank"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              className="MuiLink-root MuiLink-underlineHover"
                                              color="primary"
                                              component="a"
                                              href="https://www.reddit.com/u/youngwill44"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              rel="noopener"
                                              target="_blank"
                                              variant="inherit"
                                            >
                                              <ForwardRef(Typography)
                                                className="MuiLink-root MuiLink-underlineHover"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                color="primary"
                                                component="a"
                                                href="https://www.reddit.com/u/youngwill44"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                rel="noopener"
                                                target="_blank"
                                                variant="inherit"
                                              >
                                                <a
                                                  className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                  href="https://www.reddit.com/u/youngwill44"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  rel="noopener"
                                                  target="_blank"
                                                >
                                                  u/
                                                  youngwill44
                                                </a>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </ForwardRef(Link)>
                                        </WithStyles(ForwardRef(Link))>
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                                      >
                                        1221
                                         comments
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                              </ForwardRef(ListItemText)>
                            </WithStyles(ForwardRef(ListItemText))>
                            <WithStyles(memo)
                              center={false}
                            >
                              <ForwardRef(TouchRipple)
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(memo)>
                          </div>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                      <WithStyles(ForwardRef(ListItemSecondaryAction))
                        key=".2"
                      >
                        <ForwardRef(ListItemSecondaryAction)
                          classes={
                            Object {
                              "root": "MuiListItemSecondaryAction-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemSecondaryAction-root"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              title="Dismiss Post"
                            >
                              <ForwardRef(Tooltip)
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                title="Dismiss Post"
                              >
                                <WithStyles(ForwardRef(IconButton))
                                  aria-describedby={null}
                                  className=""
                                  color="secondary"
                                  edge="end"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Dismiss Post"
                                >
                                  <ForwardRef(IconButton)
                                    aria-describedby={null}
                                    className=""
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="secondary"
                                    edge="end"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Dismiss Post"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-describedby={null}
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      disabled={false}
                                      focusRipple={true}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchStart={[Function]}
                                      title="Dismiss Post"
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-describedby={null}
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseOver={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchStart={[Function]}
                                        title="Dismiss Post"
                                      >
                                        <button
                                          aria-describedby={null}
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseOver={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          title="Dismiss Post"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <button
                                      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      tabindex="0"
                                      title="Dismiss Post"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                  }
                                  className="MuiTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </div>
                        </ForwardRef(ListItemSecondaryAction)>
                      </WithStyles(ForwardRef(ListItemSecondaryAction))>
                    </li>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
                <WithStyles(ForwardRef(Divider))
                  component="li"
                >
                  <ForwardRef(Divider)
                    classes={
                      Object {
                        "absolute": "MuiDivider-absolute",
                        "flexItem": "MuiDivider-flexItem",
                        "inset": "MuiDivider-inset",
                        "light": "MuiDivider-light",
                        "middle": "MuiDivider-middle",
                        "root": "MuiDivider-root",
                        "vertical": "MuiDivider-vertical",
                      }
                    }
                    component="li"
                  >
                    <li
                      className="MuiDivider-root"
                      role="separator"
                    />
                  </ForwardRef(Divider)>
                </WithStyles(ForwardRef(Divider))>
              </div>
            </Transition>
          </ForwardRef(Slide)>
          <ForwardRef(Slide)
            direction="right"
            in={true}
            key="2hpvg0"
            mountOnEnter={true}
            timeout={300}
            unmountOnExit={true}
          >
            <Transition
              appear={true}
              enter={true}
              exit={true}
              in={true}
              mountOnEnter={true}
              nodeRef={
                Object {
                  "current": <div
                    style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                  >
                    <li
                      class="MuiListItem-container"
                    >
                      <div
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        role="button"
                        tabindex="0"
                      >
                        <div
                          class="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                        >
                          <span
                            class="MuiBadge-root"
                          >
                            <div
                              class="MuiAvatar-root MuiAvatar-square"
                            >
                              <img
                                alt="Fixing a toilet leak. I took 2 trips to Home Depot, worked with a hernia, had a pain in the ass time putting the wax ring and screws on...only to install the toilet and forgetting about the door. I'm an idiot."
                                class="MuiAvatar-img"
                                src="http://b.thumbs.redditmedia.com/Xg8ws4VIUZ9zOf4MuYmVznZn2HZBqphAnVwMseTQZ1o.jpg"
                              />
                            </div>
                            <span
                              class="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                            >
                               
                            </span>
                          </span>
                        </div>
                        <div
                          class="MuiListItemText-root MuiListItemText-multiline"
                        >
                          <h6
                            class="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                          >
                            Fixing a toilet leak. I took 2 trips to Home Depot, worked with a hernia, had a pain in the ass time putting the wax ring and screws on...only to install the toilet and forgetting about the door. I'm an idiot.
                          </h6>
                          <div
                            class="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                          >
                            <a
                              class="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                              href="https://www.reddit.com/u/Dreyyy"
                              rel="noopener"
                              target="_blank"
                            >
                              u/
                              Dreyyy
                            </a>
                          </div>
                          <div
                            class="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                          >
                            2150
                             comments
                          </div>
                        </div>
                        <span
                          class="MuiTouchRipple-root"
                        />
                      </div>
                      <div
                        class="MuiListItemSecondaryAction-root"
                      >
                        <button
                          class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                          tabindex="0"
                          title="Dismiss Post"
                          type="button"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                              />
                            </svg>
                          </span>
                          <span
                            class="MuiTouchRipple-root"
                          />
                        </button>
                      </div>
                    </li>
                    <li
                      class="MuiDivider-root"
                      role="separator"
                    />
                  </div>,
                }
              }
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={300}
              unmountOnExit={true}
            >
              <div
                style={
                  Object {
                    "visibility": undefined,
                  }
                }
              >
                <WithStyles(ForwardRef(ListItem))
                  alignItems="flex-start"
                  button={true}
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    alignItems="flex-start"
                    button={true}
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <li
                      className="MuiListItem-container"
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="div"
                          disabled={false}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                        >
                          <div
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button MuiListItem-alignItemsFlexStart MuiListItem-secondaryAction"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ListItemAvatar))
                              key=".0"
                            >
                              <ForwardRef(ListItemAvatar)
                                classes={
                                  Object {
                                    "alignItemsFlexStart": "MuiListItemAvatar-alignItemsFlexStart",
                                    "root": "MuiListItemAvatar-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                                >
                                  <WithStyles(ForwardRef(Badge))
                                    badgeContent=" "
                                    color="primary"
                                  >
                                    <ForwardRef(Badge)
                                      badgeContent=" "
                                      classes={
                                        Object {
                                          "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                          "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                          "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                          "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                          "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                          "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                          "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                          "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                          "badge": "MuiBadge-badge",
                                          "colorError": "MuiBadge-colorError",
                                          "colorPrimary": "MuiBadge-colorPrimary",
                                          "colorSecondary": "MuiBadge-colorSecondary",
                                          "dot": "MuiBadge-dot",
                                          "invisible": "MuiBadge-invisible",
                                          "root": "MuiBadge-root",
                                        }
                                      }
                                      color="primary"
                                    >
                                      <span
                                        className="MuiBadge-root"
                                      >
                                        <WithStyles(ForwardRef(Avatar))
                                          alt="Fixing a toilet leak. I took 2 trips to Home Depot, worked with a hernia, had a pain in the ass time putting the wax ring and screws on...only to install the toilet and forgetting about the door. I'm an idiot."
                                          src="http://b.thumbs.redditmedia.com/Xg8ws4VIUZ9zOf4MuYmVznZn2HZBqphAnVwMseTQZ1o.jpg"
                                          variant="square"
                                        >
                                          <ForwardRef(Avatar)
                                            alt="Fixing a toilet leak. I took 2 trips to Home Depot, worked with a hernia, had a pain in the ass time putting the wax ring and screws on...only to install the toilet and forgetting about the door. I'm an idiot."
                                            classes={
                                              Object {
                                                "circle": "MuiAvatar-circle",
                                                "colorDefault": "MuiAvatar-colorDefault",
                                                "fallback": "MuiAvatar-fallback",
                                                "img": "MuiAvatar-img",
                                                "root": "MuiAvatar-root",
                                                "rounded": "MuiAvatar-rounded",
                                                "square": "MuiAvatar-square",
                                              }
                                            }
                                            src="http://b.thumbs.redditmedia.com/Xg8ws4VIUZ9zOf4MuYmVznZn2HZBqphAnVwMseTQZ1o.jpg"
                                            variant="square"
                                          >
                                            <div
                                              className="MuiAvatar-root MuiAvatar-square"
                                            >
                                              <img
                                                alt="Fixing a toilet leak. I took 2 trips to Home Depot, worked with a hernia, had a pain in the ass time putting the wax ring and screws on...only to install the toilet and forgetting about the door. I'm an idiot."
                                                className="MuiAvatar-img"
                                                src="http://b.thumbs.redditmedia.com/Xg8ws4VIUZ9zOf4MuYmVznZn2HZBqphAnVwMseTQZ1o.jpg"
                                              />
                                            </div>
                                          </ForwardRef(Avatar)>
                                        </WithStyles(ForwardRef(Avatar))>
                                        <span
                                          className="MuiBadge-badge MuiBadge-anchorOriginTopRightRectangle MuiBadge-colorPrimary"
                                        >
                                           
                                        </span>
                                      </span>
                                    </ForwardRef(Badge)>
                                  </WithStyles(ForwardRef(Badge))>
                                </div>
                              </ForwardRef(ListItemAvatar)>
                            </WithStyles(ForwardRef(ListItemAvatar))>
                            <WithStyles(ForwardRef(ListItemText))
                              disableTypography={true}
                              key=".1"
                              primary={
                                <WithStyles(ForwardRef(Typography))
                                  color="textPrimary"
                                  variant="h6"
                                >
                                  Fixing a toilet leak. I took 2 trips to Home Depot, worked with a hernia, had a pain in the ass time putting the wax ring and screws on...only to install the toilet and forgetting about the door. I'm an idiot.
                                </WithStyles(ForwardRef(Typography))>
                              }
                              secondary={
                                <React.Fragment>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <WithStyles(ForwardRef(Link))
                                      href="https://www.reddit.com/u/Dreyyy"
                                      onClick={[Function]}
                                      rel="noopener"
                                      target="_blank"
                                    >
                                      u/
                                      Dreyyy
                                    </WithStyles(ForwardRef(Link))>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    2150
                                     comments
                                  </WithStyles(ForwardRef(Typography))>
                                </React.Fragment>
                              }
                            >
                              <ForwardRef(ListItemText)
                                classes={
                                  Object {
                                    "dense": "MuiListItemText-dense",
                                    "inset": "MuiListItemText-inset",
                                    "multiline": "MuiListItemText-multiline",
                                    "primary": "MuiListItemText-primary",
                                    "root": "MuiListItemText-root",
                                    "secondary": "MuiListItemText-secondary",
                                  }
                                }
                                disableTypography={true}
                                primary={
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    Fixing a toilet leak. I took 2 trips to Home Depot, worked with a hernia, had a pain in the ass time putting the wax ring and screws on...only to install the toilet and forgetting about the door. I'm an idiot.
                                  </WithStyles(ForwardRef(Typography))>
                                }
                                secondary={
                                  <React.Fragment>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <WithStyles(ForwardRef(Link))
                                        href="https://www.reddit.com/u/Dreyyy"
                                        onClick={[Function]}
                                        rel="noopener"
                                        target="_blank"
                                      >
                                        u/
                                        Dreyyy
                                      </WithStyles(ForwardRef(Link))>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(ForwardRef(Typography))
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      2150
                                       comments
                                    </WithStyles(ForwardRef(Typography))>
                                  </React.Fragment>
                                }
                              >
                                <div
                                  className="MuiListItemText-root MuiListItemText-multiline"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    variant="h6"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      variant="h6"
                                    >
                                      <h6
                                        className="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                                      >
                                        Fixing a toilet leak. I took 2 trips to Home Depot, worked with a hernia, had a pain in the ass time putting the wax ring and screws on...only to install the toilet and forgetting about the door. I'm an idiot.
                                      </h6>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textPrimary"
                                    component="div"
                                    variant="body2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textPrimary"
                                      component="div"
                                      variant="body2"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextPrimary"
                                      >
                                        <WithStyles(ForwardRef(Link))
                                          href="https://www.reddit.com/u/Dreyyy"
                                          onClick={[Function]}
                                          rel="noopener"
                                          target="_blank"
                                        >
                                          <ForwardRef(Link)
                                            classes={
                                              Object {
                                                "button": "MuiLink-button",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiLink-root",
                                                "underlineAlways": "MuiLink-underlineAlways",
                                                "underlineHover": "MuiLink-underlineHover",
                                                "underlineNone": "MuiLink-underlineNone",
                                              }
                                            }
                                            href="https://www.reddit.com/u/Dreyyy"
                                            onClick={[Function]}
                                            rel="noopener"
                                            target="_blank"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              className="MuiLink-root MuiLink-underlineHover"
                                              color="primary"
                                              component="a"
                                              href="https://www.reddit.com/u/Dreyyy"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              rel="noopener"
                                              target="_blank"
                                              variant="inherit"
                                            >
                                              <ForwardRef(Typography)
                                                className="MuiLink-root MuiLink-underlineHover"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                color="primary"
                                                component="a"
                                                href="https://www.reddit.com/u/Dreyyy"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                rel="noopener"
                                                target="_blank"
                                                variant="inherit"
                                              >
                                                <a
                                                  className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                  href="https://www.reddit.com/u/Dreyyy"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  rel="noopener"
                                                  target="_blank"
                                                >
                                                  u/
                                                  Dreyyy
                                                </a>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </ForwardRef(Link)>
                                        </WithStyles(ForwardRef(Link))>
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    color="textSecondary"
                                    component="div"
                                    variant="caption"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="textSecondary"
                                      component="div"
                                      variant="caption"
                                    >
                                      <div
                                        className="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                                      >
                                        2150
                                         comments
                                      </div>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                              </ForwardRef(ListItemText)>
                            </WithStyles(ForwardRef(ListItemText))>
                            <WithStyles(memo)
                              center={false}
                            >
                              <ForwardRef(TouchRipple)
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(memo)>
                          </div>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                      <WithStyles(ForwardRef(ListItemSecondaryAction))
                        key=".2"
                      >
                        <ForwardRef(ListItemSecondaryAction)
                          classes={
                            Object {
                              "root": "MuiListItemSecondaryAction-root",
                            }
                          }
                        >
                          <div
                            className="MuiListItemSecondaryAction-root"
                          >
                            <WithStyles(ForwardRef(Tooltip))
                              title="Dismiss Post"
                            >
                              <ForwardRef(Tooltip)
                                classes={
                                  Object {
                                    "arrow": "MuiTooltip-arrow",
                                    "popper": "MuiTooltip-popper",
                                    "popperArrow": "MuiTooltip-popperArrow",
                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                    "tooltip": "MuiTooltip-tooltip",
                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                    "touch": "MuiTooltip-touch",
                                  }
                                }
                                title="Dismiss Post"
                              >
                                <WithStyles(ForwardRef(IconButton))
                                  aria-describedby={null}
                                  className=""
                                  color="secondary"
                                  edge="end"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Dismiss Post"
                                >
                                  <ForwardRef(IconButton)
                                    aria-describedby={null}
                                    className=""
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="secondary"
                                    edge="end"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Dismiss Post"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-describedby={null}
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      disabled={false}
                                      focusRipple={true}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchStart={[Function]}
                                      title="Dismiss Post"
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-describedby={null}
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseOver={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchStart={[Function]}
                                        title="Dismiss Post"
                                      >
                                        <button
                                          aria-describedby={null}
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseOver={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          title="Dismiss Post"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                                <ForwardRef(Popper)
                                  anchorEl={
                                    <button
                                      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary MuiIconButton-edgeEnd"
                                      tabindex="0"
                                      title="Dismiss Post"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                  }
                                  className="MuiTooltip-popper"
                                  id={null}
                                  open={false}
                                  placement="bottom"
                                  popperOptions={
                                    Object {
                                      "modifiers": Object {
                                        "arrow": Object {
                                          "element": null,
                                          "enabled": false,
                                        },
                                      },
                                    }
                                  }
                                  transition={true}
                                />
                              </ForwardRef(Tooltip)>
                            </WithStyles(ForwardRef(Tooltip))>
                          </div>
                        </ForwardRef(ListItemSecondaryAction)>
                      </WithStyles(ForwardRef(ListItemSecondaryAction))>
                    </li>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
                <WithStyles(ForwardRef(Divider))
                  component="li"
                >
                  <ForwardRef(Divider)
                    classes={
                      Object {
                        "absolute": "MuiDivider-absolute",
                        "flexItem": "MuiDivider-flexItem",
                        "inset": "MuiDivider-inset",
                        "light": "MuiDivider-light",
                        "middle": "MuiDivider-middle",
                        "root": "MuiDivider-root",
                        "vertical": "MuiDivider-vertical",
                      }
                    }
                    component="li"
                  >
                    <li
                      className="MuiDivider-root"
                      role="separator"
                    />
                  </ForwardRef(Divider)>
                </WithStyles(ForwardRef(Divider))>
              </div>
            </Transition>
          </ForwardRef(Slide)>
        </ul>
      </ForwardRef(List)>
    </WithStyles(ForwardRef(List))>
  </PostList>
</Provider>
`;
